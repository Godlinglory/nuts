(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{116:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,l=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),u=p(a),O=n,j=u["".concat(l,".").concat(O)]||u[O]||i[O]||c;return a?r.a.createElement(j,o(o({ref:t},s),{},{components:a})):r.a.createElement(j,o({ref:t},s))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,l=new Array(c);l[0]=O;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var s=2;s<c;s++)l[s]=a[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},83:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),c=(a(0),a(116)),l={id:"javadoc_Input_Output",title:"Input Output",sidebar_label:"Input Output"},o={unversionedId:"javadocs/javadoc_Input_Output",id:"javadocs/javadoc_Input_Output",isDocsHomePage:!1,title:"Input Output",description:"\u2615 NutsIOCopyAction",source:"@site/docs/javadocs/Input Output.md",permalink:"/nuts/docs/javadocs/javadoc_Input_Output",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/javadocs/Input Output.md",sidebar_label:"Input Output",sidebar:"someSidebar",previous:{title:"Events",permalink:"/nuts/docs/javadocs/javadoc_Events"},next:{title:"Logging",permalink:"/nuts/docs/javadocs/javadoc_Logging"}},b=[{value:"\u2615 NutsIOCopyAction",id:"-nutsiocopyaction",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods",children:[]}]},{value:"\u2615 NutsIODeleteAction",id:"-nutsiodeleteaction",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties-1",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-1",children:[]}]},{value:"\u2615 NutsIOHashAction",id:"-nutsiohashaction",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties-2",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-2",children:[]}]},{value:"\u2615 NutsIOLockAction",id:"-nutsiolockaction",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties-3",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-3",children:[]}]},{value:"\u2615 NutsIOManager",id:"-nutsiomanager",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties-4",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-4",children:[]}]},{value:"\u2615 NutsLock",id:"-nutslock",children:[]},{value:"\u2615 NutsNonFormattedPrintStream",id:"-nutsnonformattedprintstream",children:[]},{value:"\u2615 NutsOutputStreamTransparentAdapter",id:"-nutsoutputstreamtransparentadapter",children:[{value:"\u2699 Instance Methods",id:"-instance-methods-5",children:[]}]},{value:"\u2615 NutsSystemTerminal",id:"-nutssystemterminal",children:[{value:"\u2699 Instance Methods",id:"-instance-methods-6",children:[]}]},{value:"\u2615 NutsTerminal",id:"-nutsterminal",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties-5",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-7",children:[]}]}],s={rightToc:b};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"-nutsiocopyaction"},"\u2615 NutsIOCopyAction"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsIOCopyAction\n")),Object(c.b)("p",null,"I/O Action that help monitored copy of one or multiple resource types.\nImplementation should at least handle the following types as valid sources :"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"InputStream"),Object(c.b)("li",{parentName:"ul"},"string (as path or url)"),Object(c.b)("li",{parentName:"ul"},"File (file or directory)"),Object(c.b)("li",{parentName:"ul"},"Path (file or directory)"),Object(c.b)("li",{parentName:"ul"},"URL")),Object(c.b)("p",null,"and the following types as valid targets :"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"OutputStream"),Object(c.b)("li",{parentName:"ul"},"string (as path or url)"),Object(c.b)("li",{parentName:"ul"},"File (file or directory)"),Object(c.b)("li",{parentName:"ul"},"Path (file or directory)")),Object(c.b)("h3",{id:"-instance-properties"},"\ud83c\udf9b Instance Properties"),Object(c.b)("h4",{id:"-bytearrayresult"},"\ud83d\udcc4\ud83c\udf9b byteArrayResult"),Object(c.b)("p",null,"run this copy action with ",Object(c.b)("inlineCode",{parentName:"p"}," java.io.ByteArrayOutputStream")," target and return bytes result"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  byte[] byteArrayResult\n byte[] getByteArrayResult()\n")),Object(c.b)("h4",{id:"-interruptible"},"\ud83d\udcdd\ud83c\udf9b interruptible"),Object(c.b)("p",null,"mark created stream as interruptible so that one can call ",Object(c.b)("inlineCode",{parentName:"p"}," #interrupt()")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  interruptible\n boolean isInterruptible()\n NutsIOCopyAction setInterruptible(interruptible)\n")),Object(c.b)("h4",{id:"-logprogress"},"\ud83d\udcdd\ud83c\udf9b logProgress"),Object(c.b)("p",null,"switch log progress flag to ",Object(c.b)("inlineCode",{parentName:"p"}," value"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  logProgress\n boolean isLogProgress()\n NutsIOCopyAction setLogProgress(value)\n")),Object(c.b)("h4",{id:"-progressmonitor"},"\u270f\ud83c\udf9b progressMonitor"),Object(c.b)("p",null,"set progress monitor. Will create a singleton progress monitor factory"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[write-only] NutsIOCopyAction  progressMonitor\n NutsIOCopyAction setProgressMonitor(value)\n")),Object(c.b)("h4",{id:"-progressmonitorfactory"},"\ud83d\udcdd\ud83c\udf9b progressMonitorFactory"),Object(c.b)("p",null,"set progress factory responsible of creating progress monitor"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  progressMonitorFactory\n NutsProgressFactory getProgressMonitorFactory()\n NutsIOCopyAction setProgressMonitorFactory(value)\n")),Object(c.b)("h4",{id:"-safe"},"\ud83d\udcdd\ud83c\udf9b safe"),Object(c.b)("p",null,"switch safe copy flag to ",Object(c.b)("inlineCode",{parentName:"p"}," value")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  safe\n boolean isSafe()\n NutsIOCopyAction setSafe(value)\n")),Object(c.b)("h4",{id:"-session"},"\ud83d\udcdd\ud83c\udf9b session"),Object(c.b)("p",null,"update current session"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  session\n NutsSession getSession()\n NutsIOCopyAction setSession(session)\n")),Object(c.b)("h4",{id:"-skiproot"},"\ud83d\udcdd\ud83c\udf9b skipRoot"),Object(c.b)("p",null,"set skip root flag to ",Object(c.b)("inlineCode",{parentName:"p"}," value")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  skipRoot\n boolean isSkipRoot()\n NutsIOCopyAction setSkipRoot(value)\n")),Object(c.b)("h4",{id:"-source"},"\ud83d\udcdd\ud83c\udf9b source"),Object(c.b)("p",null,"update source to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  source\n Object getSource()\n NutsIOCopyAction setSource(source)\n")),Object(c.b)("h4",{id:"-target"},"\ud83d\udcdd\ud83c\udf9b target"),Object(c.b)("p",null,"update target to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  target\n Object getTarget()\n NutsIOCopyAction setTarget(target)\n")),Object(c.b)("h4",{id:"-validator"},"\ud83d\udcdd\ud83c\udf9b validator"),Object(c.b)("p",null,"update validator"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOCopyAction  validator\n NutsIOCopyValidator getValidator()\n NutsIOCopyAction setValidator(validator)\n")),Object(c.b)("h3",{id:"-instance-methods"},"\u2699 Instance Methods"),Object(c.b)("h4",{id:"-fromsource"},"\u2699 from(source)"),Object(c.b)("p",null,"update source to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction from(Object source)\n")),Object(c.b)("p",null,"source to copy from"),Object(c.b)("h4",{id:"-fromsource-1"},"\u2699 from(source)"),Object(c.b)("p",null,"update source to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction from(String source)\n")),Object(c.b)("p",null,"source to copy from"),Object(c.b)("h4",{id:"-fromsource-2"},"\u2699 from(source)"),Object(c.b)("p",null,"update source to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction from(InputStream source)\n")),Object(c.b)("p",null,"source to copy from"),Object(c.b)("h4",{id:"-fromsource-3"},"\u2699 from(source)"),Object(c.b)("p",null,"update source to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction from(File source)\n")),Object(c.b)("p",null,"source to copy from"),Object(c.b)("h4",{id:"-fromsource-4"},"\u2699 from(source)"),Object(c.b)("p",null,"update source to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction from(Path source)\n")),Object(c.b)("p",null,"source to copy from"),Object(c.b)("h4",{id:"-fromsource-5"},"\u2699 from(source)"),Object(c.b)("p",null,"update source to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction from(URL source)\n")),Object(c.b)("p",null,"source to copy from"),Object(c.b)("h4",{id:"-interrupt"},"\u2699 interrupt()"),Object(c.b)("p",null,"interrupt last created stream. An exception is throws when the stream is read."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction interrupt()\n")),Object(c.b)("h4",{id:"-logprogress-1"},"\u2699 logProgress()"),Object(c.b)("p",null,"switch log progress flag to to true."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction logProgress()\n")),Object(c.b)("h4",{id:"-logprogressvalue"},"\u2699 logProgress(value)"),Object(c.b)("p",null,"switch log progress to ",Object(c.b)("inlineCode",{parentName:"p"}," value")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction logProgress(boolean value)\n")),Object(c.b)("p",null,"log progress"),Object(c.b)("h4",{id:"-progressmonitorvalue"},"\u2699 progressMonitor(value)"),Object(c.b)("p",null,"set progress monitor. Will create a singleton progress monitor factory"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction progressMonitor(NutsProgressMonitor value)\n")),Object(c.b)("p",null,"new value"),Object(c.b)("h4",{id:"-progressmonitorfactoryvalue"},"\u2699 progressMonitorFactory(value)"),Object(c.b)("p",null,"set progress factory responsible of creating progress monitor"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction progressMonitorFactory(NutsProgressFactory value)\n")),Object(c.b)("p",null,"new value"),Object(c.b)("h4",{id:"-run"},"\u2699 run()"),Object(c.b)("p",null,"run this copy action"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction run()\n")),Object(c.b)("h4",{id:"-safe-1"},"\u2699 safe()"),Object(c.b)("p",null,"arm safe copy flag"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction safe()\n")),Object(c.b)("h4",{id:"-safevalue"},"\u2699 safe(value)"),Object(c.b)("p",null,"switch safe copy flag to ",Object(c.b)("inlineCode",{parentName:"p"}," value")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction safe(boolean value)\n")),Object(c.b)("p",null,"value"),Object(c.b)("h4",{id:"-skiproot-1"},"\u2699 skipRoot()"),Object(c.b)("p",null,"set skip root flag to ",Object(c.b)("inlineCode",{parentName:"p"}," true")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction skipRoot()\n")),Object(c.b)("h4",{id:"-skiprootvalue"},"\u2699 skipRoot(value)"),Object(c.b)("p",null,"set skip root flag to ",Object(c.b)("inlineCode",{parentName:"p"}," value")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction skipRoot(boolean value)\n")),Object(c.b)("p",null,"new value"),Object(c.b)("h4",{id:"-totarget"},"\u2699 to(target)"),Object(c.b)("p",null,"update target"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction to(Object target)\n")),Object(c.b)("p",null,"target"),Object(c.b)("h4",{id:"-totarget-1"},"\u2699 to(target)"),Object(c.b)("p",null,"update target"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction to(OutputStream target)\n")),Object(c.b)("p",null,"target"),Object(c.b)("h4",{id:"-totarget-2"},"\u2699 to(target)"),Object(c.b)("p",null,"update target to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction to(String target)\n")),Object(c.b)("p",null,"target to copy to"),Object(c.b)("h4",{id:"-totarget-3"},"\u2699 to(target)"),Object(c.b)("p",null,"update target to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction to(Path target)\n")),Object(c.b)("p",null,"target to copy to"),Object(c.b)("h4",{id:"-totarget-4"},"\u2699 to(target)"),Object(c.b)("p",null,"update target to copy from"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction to(File target)\n")),Object(c.b)("p",null,"target to copy to"),Object(c.b)("h4",{id:"-validatorvalidator"},"\u2699 validator(validator)"),Object(c.b)("p",null,"update validator"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction validator(NutsIOCopyValidator validator)\n")),Object(c.b)("p",null,"validator"),Object(c.b)("h2",{id:"-nutsiodeleteaction"},"\u2615 NutsIODeleteAction"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsIODeleteAction\n")),Object(c.b)("p",null,"I/O Action that help monitored delete."),Object(c.b)("h3",{id:"-instance-properties-1"},"\ud83c\udf9b Instance Properties"),Object(c.b)("h4",{id:"-failfast"},"\ud83d\udcdd\ud83c\udf9b failFast"),Object(c.b)("p",null,"update fail fast flag"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIODeleteAction  failFast\n boolean isFailFast()\n NutsIODeleteAction setFailFast(failFast)\n")),Object(c.b)("h4",{id:"-session-1"},"\ud83d\udcdd\ud83c\udf9b session"),Object(c.b)("p",null,"update session"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIODeleteAction  session\n NutsSession getSession()\n NutsIODeleteAction setSession(session)\n")),Object(c.b)("h4",{id:"-target-1"},"\ud83d\udcdd\ud83c\udf9b target"),Object(c.b)("p",null,"update target to delete"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIODeleteAction  target\n Object getTarget()\n NutsIODeleteAction setTarget(target)\n")),Object(c.b)("h3",{id:"-instance-methods-1"},"\u2699 Instance Methods"),Object(c.b)("h4",{id:"-failfast-1"},"\u2699 failFast()"),Object(c.b)("p",null,"set fail fast flag"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIODeleteAction failFast()\n")),Object(c.b)("h4",{id:"-failfastfailfast"},"\u2699 failFast(failFast)"),Object(c.b)("p",null,"update fail fast flag"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIODeleteAction failFast(boolean failFast)\n")),Object(c.b)("p",null,"value"),Object(c.b)("h4",{id:"-run-1"},"\u2699 run()"),Object(c.b)("p",null,"run delete action and return ",Object(c.b)("inlineCode",{parentName:"p"}," this")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIODeleteAction run()\n")),Object(c.b)("h4",{id:"-targettarget"},"\u2699 target(target)"),Object(c.b)("p",null,"update target to delete"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIODeleteAction target(Object target)\n")),Object(c.b)("p",null,"target"),Object(c.b)("h2",{id:"-nutsiohashaction"},"\u2615 NutsIOHashAction"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsIOHashAction\n")),Object(c.b)("p",null,"I/O command to hash contents."),Object(c.b)("h3",{id:"-instance-properties-2"},"\ud83c\udf9b Instance Properties"),Object(c.b)("h4",{id:"-algorithm"},"\ud83d\udcdd\ud83c\udf9b algorithm"),Object(c.b)("p",null,"select hash algorithm."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOHashAction  algorithm\n String getAlgorithm()\n NutsIOHashAction setAlgorithm(algorithm)\n")),Object(c.b)("h3",{id:"-instance-methods-2"},"\u2699 Instance Methods"),Object(c.b)("h4",{id:"-algorithmalgorithm"},"\u2699 algorithm(algorithm)"),Object(c.b)("p",null,"select hash algorithm."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction algorithm(String algorithm)\n")),Object(c.b)("p",null,"hash algorithm. may be any algorithm supported by\n{@link MessageDigest#getInstance(String)}\nincluding 'MD5' and 'SHA1'"),Object(c.b)("h4",{id:"-computebytes"},"\u2699 computeBytes()"),Object(c.b)("p",null,"compute hash digest and return it as byte array"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"byte[] computeBytes()\n")),Object(c.b)("h4",{id:"-computestring"},"\u2699 computeString()"),Object(c.b)("p",null,"compute hash digest and return it as hexadecimal string"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"String computeString()\n")),Object(c.b)("h4",{id:"-md5"},"\u2699 md5()"),Object(c.b)("p",null,"select MD5 hash algorithm"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction md5()\n")),Object(c.b)("h4",{id:"-sha1"},"\u2699 sha1()"),Object(c.b)("p",null,"select MD5 hash algorithm"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction sha1()\n")),Object(c.b)("h4",{id:"-sourcedescriptor"},"\u2699 source(descriptor)"),Object(c.b)("p",null,"source stream to  hash"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction source(NutsDescriptor descriptor)\n")),Object(c.b)("p",null,"source descriptor to  hash"),Object(c.b)("h4",{id:"-sourcefile"},"\u2699 source(file)"),Object(c.b)("p",null,"file to  hash"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction source(File file)\n")),Object(c.b)("p",null,"source file to  hash"),Object(c.b)("h4",{id:"-sourceinput"},"\u2699 source(input)"),Object(c.b)("p",null,"source stream to  hash"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction source(InputStream input)\n")),Object(c.b)("p",null,"source stream to  hash"),Object(c.b)("h4",{id:"-sourcepath"},"\u2699 source(path)"),Object(c.b)("p",null,"file to  hash"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction source(Path path)\n")),Object(c.b)("p",null,"source path to  hash"),Object(c.b)("h4",{id:"-writehashout"},"\u2699 writeHash(out)"),Object(c.b)("p",null,"compute hash and writes it to the output stream"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction writeHash(OutputStream out)\n")),Object(c.b)("p",null,"output stream"),Object(c.b)("h2",{id:"-nutsiolockaction"},"\u2615 NutsIOLockAction"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsIOLockAction\n")),Object(c.b)("p",null,"Lock builder to create mainly File based Locks"),Object(c.b)("h3",{id:"-instance-properties-3"},"\ud83c\udf9b Instance Properties"),Object(c.b)("h4",{id:"-resource"},"\ud83d\udcdd\ud83c\udf9b resource"),Object(c.b)("p",null,"update resource"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOLockAction  resource\n Object getResource()\n NutsIOLockAction setResource(source)\n")),Object(c.b)("h4",{id:"-session-2"},"\ud83d\udcdd\ud83c\udf9b session"),Object(c.b)("p",null,"update session"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOLockAction  session\n NutsSession getSession()\n NutsIOLockAction setSession(session)\n")),Object(c.b)("h4",{id:"-source-1"},"\ud83d\udcdd\ud83c\udf9b source"),Object(c.b)("p",null,"update source"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOLockAction  source\n Object getSource()\n NutsIOLockAction setSource(source)\n")),Object(c.b)("h3",{id:"-instance-methods-3"},"\u2699 Instance Methods"),Object(c.b)("h4",{id:"-callrunnable"},"\u2699 call(runnable)"),Object(c.b)("p",null,"create lock object for the given source and resource"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"T call(Callable\\<T\\> runnable)\n")),Object(c.b)("p",null,"runnable"),Object(c.b)("h4",{id:"-callrunnable-time-unit"},"\u2699 call(runnable, time, unit)"),Object(c.b)("p",null,"create lock object for the given source and resource"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"T call(Callable\\<T\\> runnable, long time, TimeUnit unit)\n")),Object(c.b)("p",null,"runnable\ntime\nunit"),Object(c.b)("h4",{id:"-create"},"\u2699 create()"),Object(c.b)("p",null,"create lock object for the given source and resource"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsLock create()\n")),Object(c.b)("h4",{id:"-resourcesource"},"\u2699 resource(source)"),Object(c.b)("p",null,"update resource"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOLockAction resource(Object source)\n")),Object(c.b)("p",null,"resource"),Object(c.b)("h4",{id:"-runrunnable"},"\u2699 run(runnable)"),Object(c.b)("p",null,"create lock object for the given source and resource"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"void run(Runnable runnable)\n")),Object(c.b)("p",null,"runnable"),Object(c.b)("h4",{id:"-runrunnable-time-unit"},"\u2699 run(runnable, time, unit)"),Object(c.b)("p",null,"create lock object for the given source and resource"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"void run(Runnable runnable, long time, TimeUnit unit)\n")),Object(c.b)("p",null,"runnable\ntime\nunit"),Object(c.b)("h4",{id:"-sourcesource"},"\u2699 source(source)"),Object(c.b)("p",null,"update source"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOLockAction source(Object source)\n")),Object(c.b)("p",null,"source"),Object(c.b)("h2",{id:"-nutsiomanager"},"\u2615 NutsIOManager"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsIOManager\n")),Object(c.b)("p",null,"I/O Manager supports a set of operations to manipulate terminals and files in a\nhandy manner that is monitorable and Workspace aware."),Object(c.b)("h3",{id:"-instance-properties-4"},"\ud83c\udf9b Instance Properties"),Object(c.b)("h4",{id:"-systemterminal"},"\ud83d\udcdd\ud83c\udf9b systemTerminal"),Object(c.b)("p",null,"update workspace wide system terminal"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOManager  systemTerminal\n NutsSystemTerminal getSystemTerminal()\n NutsIOManager setSystemTerminal(terminal)\n")),Object(c.b)("h4",{id:"-terminal"},"\ud83d\udcdd\ud83c\udf9b terminal"),Object(c.b)("p",null,"update workspace wide terminal"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsIOManager  terminal\n NutsSessionTerminal getTerminal()\n NutsIOManager setTerminal(terminal)\n")),Object(c.b)("h4",{id:"-terminalformat"},"\ud83d\udcc4\ud83c\udf9b terminalFormat"),Object(c.b)("p",null,"return terminal format that handles metrics and format/escape methods."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  NutsTerminalFormat terminalFormat\n NutsTerminalFormat getTerminalFormat()\n")),Object(c.b)("h3",{id:"-instance-methods-4"},"\u2699 Instance Methods"),Object(c.b)("h4",{id:"-compress"},"\u2699 compress()"),Object(c.b)("p",null,"create new ",Object(c.b)("inlineCode",{parentName:"p"}," NutsIOCompressAction")," instance"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCompressAction compress()\n")),Object(c.b)("h4",{id:"-copy"},"\u2699 copy()"),Object(c.b)("p",null,"create new ",Object(c.b)("inlineCode",{parentName:"p"}," NutsIOCopyAction")," instance"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOCopyAction copy()\n")),Object(c.b)("h4",{id:"-createapplicationcontextargs-appclass-storeid-starttimemillis"},"\u2699 createApplicationContext(args, appClass, storeId, startTimeMillis)"),Object(c.b)("p",null,"create a new instance of ",Object(c.b)("inlineCode",{parentName:"p"}," NutsApplicationContext")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsApplicationContext createApplicationContext(String[] args, Class appClass, String storeId, long startTimeMillis)\n")),Object(c.b)("p",null,"application arguments\napplication class\napplication store id or null\napplication start time"),Object(c.b)("h4",{id:"-createprintstreamout-mode"},"\u2699 createPrintStream(out, mode)"),Object(c.b)("p",null,"create print stream that supports the given ",Object(c.b)("inlineCode",{parentName:"p"}," mode"),".\nIf the given ",Object(c.b)("inlineCode",{parentName:"p"}," out")," is a PrintStream that supports ",Object(c.b)("inlineCode",{parentName:"p"}," mode"),", it should be\nreturned without modification."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"PrintStream createPrintStream(OutputStream out, NutsTerminalMode mode)\n")),Object(c.b)("p",null,"stream to wrap\nmode to support"),Object(c.b)("h4",{id:"-createtempfilename"},"\u2699 createTempFile(name)"),Object(c.b)("p",null,"create temp file in the workspace's temp folder"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"Path createTempFile(String name)\n")),Object(c.b)("p",null,"file name"),Object(c.b)("h4",{id:"-createtempfilename-repository"},"\u2699 createTempFile(name, repository)"),Object(c.b)("p",null,"create temp file in the repository's temp folder"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"Path createTempFile(String name, NutsRepository repository)\n")),Object(c.b)("p",null,"file name\nrepository"),Object(c.b)("h4",{id:"-createtempfoldername"},"\u2699 createTempFolder(name)"),Object(c.b)("p",null,"create temp folder in the workspace's temp folder"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"Path createTempFolder(String name)\n")),Object(c.b)("p",null,"folder name"),Object(c.b)("h4",{id:"-createtempfoldername-repository"},"\u2699 createTempFolder(name, repository)"),Object(c.b)("p",null,"create temp folder in the repository's temp folder"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"Path createTempFolder(String name, NutsRepository repository)\n")),Object(c.b)("p",null,"folder name\nrepository"),Object(c.b)("h4",{id:"-createterminal"},"\u2699 createTerminal()"),Object(c.b)("p",null,"return new terminal bound to system terminal"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsSessionTerminal createTerminal()\n")),Object(c.b)("h4",{id:"-createterminalparent"},"\u2699 createTerminal(parent)"),Object(c.b)("p",null,"return new terminal bound to the given ",Object(c.b)("inlineCode",{parentName:"p"}," parent")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsSessionTerminal createTerminal(NutsTerminalBase parent)\n")),Object(c.b)("p",null,"parent terminal or null"),Object(c.b)("h4",{id:"-delete"},"\u2699 delete()"),Object(c.b)("p",null,"create new ",Object(c.b)("inlineCode",{parentName:"p"}," NutsIODeleteAction")," instance"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIODeleteAction delete()\n")),Object(c.b)("h4",{id:"-executorservice"},"\u2699 executorService()"),Object(c.b)("p",null,"return non null executor service"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"ExecutorService executorService()\n")),Object(c.b)("h4",{id:"-expandpathpath"},"\u2699 expandPath(path)"),Object(c.b)("p",null,"expand path to Workspace Location"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"String expandPath(String path)\n")),Object(c.b)("p",null,"path to expand"),Object(c.b)("h4",{id:"-expandpathpath-basefolder"},"\u2699 expandPath(path, baseFolder)"),Object(c.b)("p",null,"expand path to ",Object(c.b)("inlineCode",{parentName:"p"}," baseFolder"),".\nExpansion mechanism supports '~' prefix (linux like) and will expand path to ",Object(c.b)("inlineCode",{parentName:"p"}," baseFolder"),"\nif it was resolved as a relative path."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"String expandPath(String path, String baseFolder)\n")),Object(c.b)("p",null,"path to expand\nbase folder to expand relative paths to"),Object(c.b)("h4",{id:"-hash"},"\u2699 hash()"),Object(c.b)("p",null,"create new ",Object(c.b)("inlineCode",{parentName:"p"}," NutsIOHashAction")," instance that helps\nhashing streams and files."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOHashAction hash()\n")),Object(c.b)("h4",{id:"-loadformattedstringreader-classloader"},"\u2699 loadFormattedString(reader, classLoader)"),Object(c.b)("p",null,"load resource as a formatted string to be used mostly as a help string."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"String loadFormattedString(Reader reader, ClassLoader classLoader)\n")),Object(c.b)("p",null,"resource reader\nclass loader"),Object(c.b)("h4",{id:"-loadformattedstringresourcepath-classloader-defaultvalue"},"\u2699 loadFormattedString(resourcePath, classLoader, defaultValue)"),Object(c.b)("p",null,"load resource as a formatted string to be used mostly as a help string."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"String loadFormattedString(String resourcePath, ClassLoader classLoader, String defaultValue)\n")),Object(c.b)("p",null,"resource path\nclass loader\ndefault value if the loading fails"),Object(c.b)("h4",{id:"-lock"},"\u2699 lock()"),Object(c.b)("p",null,"create new ",Object(c.b)("inlineCode",{parentName:"p"}," NutsIOLockAction")," instance"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOLockAction lock()\n")),Object(c.b)("h4",{id:"-monitor"},"\u2699 monitor()"),Object(c.b)("p",null,"create new ",Object(c.b)("inlineCode",{parentName:"p"}," NutsMonitorAction")," instance that helps\nmonitoring streams."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsMonitorAction monitor()\n")),Object(c.b)("h4",{id:"-nullinputstream"},"\u2699 nullInputStream()"),Object(c.b)("p",null,"create a null input stream instance"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"InputStream nullInputStream()\n")),Object(c.b)("h4",{id:"-nullprintstream"},"\u2699 nullPrintStream()"),Object(c.b)("p",null,"create a null print stream instance"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"PrintStream nullPrintStream()\n")),Object(c.b)("h4",{id:"-parseexecutionentriesfile"},"\u2699 parseExecutionEntries(file)"),Object(c.b)("p",null,"parse Execution Entries"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsExecutionEntry[] parseExecutionEntries(File file)\n")),Object(c.b)("p",null,"jar file"),Object(c.b)("h4",{id:"-parseexecutionentriesfile-1"},"\u2699 parseExecutionEntries(file)"),Object(c.b)("p",null,"parse Execution Entries"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsExecutionEntry[] parseExecutionEntries(Path file)\n")),Object(c.b)("p",null,"jar file"),Object(c.b)("h4",{id:"-parseexecutionentriesinputstream-type-sourcename"},"\u2699 parseExecutionEntries(inputStream, type, sourceName)"),Object(c.b)("p",null,"parse Execution Entries"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsExecutionEntry[] parseExecutionEntries(InputStream inputStream, String type, String sourceName)\n")),Object(c.b)("p",null,"stream\nstream type\nstream source name (optional)"),Object(c.b)("h4",{id:"-ps"},"\u2699 ps()"),Object(c.b)("p",null,"create new ",Object(c.b)("inlineCode",{parentName:"p"}," NutsIOProcessAction")," instance"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOProcessAction ps()\n")),Object(c.b)("h4",{id:"-systemterminal-1"},"\u2699 systemTerminal()"),Object(c.b)("p",null,"return terminal format that handles metrics and format/escape methods."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsSystemTerminal systemTerminal()\n")),Object(c.b)("h4",{id:"-terminal-1"},"\u2699 terminal()"),Object(c.b)("p",null,"return workspace default terminal"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsSessionTerminal terminal()\n")),Object(c.b)("h4",{id:"-terminalformat-1"},"\u2699 terminalFormat()"),Object(c.b)("p",null,"return terminal format that handles metrics and format/escape methods"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsTerminalFormat terminalFormat()\n")),Object(c.b)("h4",{id:"-uncompress"},"\u2699 uncompress()"),Object(c.b)("p",null,"create new ",Object(c.b)("inlineCode",{parentName:"p"}," NutsIOUncompressAction")," instance"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsIOUncompressAction uncompress()\n")),Object(c.b)("h2",{id:"-nutslock"},"\u2615 NutsLock"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsLock\n")),Object(c.b)("p",null,"NutsLock is simply an adapter to standard ",Object(c.b)("inlineCode",{parentName:"p"}," Lock"),".\nIt adds no extra functionality but rather is provided as\na base for future changes."),Object(c.b)("h2",{id:"-nutsnonformattedprintstream"},"\u2615 NutsNonFormattedPrintStream"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsNonFormattedPrintStream\n")),Object(c.b)("p",null,"Non formatted Print Stream Anchor Interface"),Object(c.b)("h2",{id:"-nutsoutputstreamtransparentadapter"},"\u2615 NutsOutputStreamTransparentAdapter"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsOutputStreamTransparentAdapter\n")),Object(c.b)("p",null,'Interface to enable marking system streams. When creating new processes nuts\nwill dereference NutsOutputStreamTransparentAdapter to check if the\nOutputStream i a system io. In that cas nuts will "inherit" output/error\nstream'),Object(c.b)("h3",{id:"-instance-methods-5"},"\u2699 Instance Methods"),Object(c.b)("h4",{id:"-baseoutputstream"},"\u2699 baseOutputStream()"),Object(c.b)("p",null,"de-referenced stream"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"OutputStream baseOutputStream()\n")),Object(c.b)("h2",{id:"-nutssystemterminal"},"\u2615 NutsSystemTerminal"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsSystemTerminal\n")),Object(c.b)("h3",{id:"-instance-methods-6"},"\u2699 Instance Methods"),Object(c.b)("h4",{id:"-isstandarderrorstreamout"},"\u2699 isStandardErrorStream(out)"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"boolean isStandardErrorStream(OutputStream out)\n")),Object(c.b)("p",null,"null"),Object(c.b)("h4",{id:"-isstandardinputstreamin"},"\u2699 isStandardInputStream(in)"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"boolean isStandardInputStream(InputStream in)\n")),Object(c.b)("p",null,"null"),Object(c.b)("h4",{id:"-isstandardoutputstreamout"},"\u2699 isStandardOutputStream(out)"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"boolean isStandardOutputStream(OutputStream out)\n")),Object(c.b)("p",null,"null"),Object(c.b)("h2",{id:"-nutsterminal"},"\u2615 NutsTerminal"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsTerminal\n")),Object(c.b)("p",null,"A Terminal handles in put stream, an output stream and an error stream to communicate\nwith user."),Object(c.b)("h3",{id:"-instance-properties-5"},"\ud83c\udf9b Instance Properties"),Object(c.b)("h4",{id:"-errmode"},"\ud83d\udcdd\ud83c\udf9b errMode"),Object(c.b)("p",null,"change terminal mode for err"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsTerminal  errMode\n NutsTerminalMode getErrMode()\n NutsTerminal setErrMode(mode)\n")),Object(c.b)("h4",{id:"-mode"},"\u270f\ud83c\udf9b mode"),Object(c.b)("p",null,"change terminal mode for both out and err"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[write-only] NutsTerminal  mode\n NutsTerminal setMode(mode)\n")),Object(c.b)("h4",{id:"-outmode"},"\ud83d\udcdd\ud83c\udf9b outMode"),Object(c.b)("p",null,"change terminal mode for out"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsTerminal  outMode\n NutsTerminalMode getOutMode()\n NutsTerminal setOutMode(mode)\n")),Object(c.b)("h3",{id:"-instance-methods-7"},"\u2699 Instance Methods"),Object(c.b)("h4",{id:"-ask"},"\u2699 ask()"),Object(c.b)("p",null,"create a ",Object(c.b)("inlineCode",{parentName:"p"}," NutsQuestion")," to write a question to the terminal's output stream\nand read a typed value from the terminal's input stream."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsQuestion\\<T\\> ask()\n")),Object(c.b)("h4",{id:"-err"},"\u2699 err()"),Object(c.b)("p",null,"return terminal's error stream"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"PrintStream err()\n")),Object(c.b)("h4",{id:"-errmodemode"},"\u2699 errMode(mode)"),Object(c.b)("p",null,"change terminal mode for out"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsTerminal errMode(NutsTerminalMode mode)\n")),Object(c.b)("p",null,"mode"),Object(c.b)("h4",{id:"-in"},"\u2699 in()"),Object(c.b)("p",null,"return terminal's input stream"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"InputStream in()\n")),Object(c.b)("h4",{id:"-modemode"},"\u2699 mode(mode)"),Object(c.b)("p",null,"change terminal mode for both out and err"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsTerminal mode(NutsTerminalMode mode)\n")),Object(c.b)("p",null,"mode"),Object(c.b)("h4",{id:"-out"},"\u2699 out()"),Object(c.b)("p",null,"return terminal's output stream"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"PrintStream out()\n")),Object(c.b)("h4",{id:"-outmodemode"},"\u2699 outMode(mode)"),Object(c.b)("p",null,"change terminal mode for out"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"NutsTerminal outMode(NutsTerminalMode mode)\n")),Object(c.b)("p",null,"mode"),Object(c.b)("h4",{id:"-readlinepromptformat-params"},"\u2699 readLine(promptFormat, params)"),Object(c.b)("p",null,"Reads a single line of text from the terminal's input stream."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"String readLine(String promptFormat, Object params)\n")),Object(c.b)("p",null,"prompt message format (cstyle)\nprompt message parameters"),Object(c.b)("h4",{id:"-readpasswordpromptformat-params"},"\u2699 readPassword(promptFormat, params)"),Object(c.b)("p",null,"Reads password as a single line of text from the terminal's input stream."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"char[] readPassword(String promptFormat, Object params)\n")),Object(c.b)("p",null,"prompt message format (cstyle)\nprompt message parameters"))}p.isMDXComponent=!0}}]);