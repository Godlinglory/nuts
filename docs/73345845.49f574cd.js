(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),s=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=s.a.createContext({}),l=function(e){var t=s.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},p=function(e){var t=l(e.components);return s.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},u=s.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),p=l(n),u=a,m=p["".concat(i,".").concat(u)]||p[u]||d[u]||r;return n?s.a.createElement(m,b(b({ref:t},o),{},{components:n})):s.a.createElement(m,b({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var b={};for(var c in t)hasOwnProperty.call(t,c)&&(b[c]=t[c]);b.originalType=e,b.mdxType="string"==typeof e?e:a,i[1]=b;for(var o=2;o<r;o++)i[o]=n[o];return s.a.createElement.apply(null,i)}return s.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var a=n(2),s=n(6),r=(n(0),n(112)),i={id:"javadoc_Security",title:"Security",sidebar_label:"Security"},b={unversionedId:"javadocs/javadoc_Security",id:"javadocs/javadoc_Security",isDocsHomePage:!1,title:"Security",description:"\u2615 NutsAddUserCommand",source:"@site/docs/javadocs/Security.md",permalink:"/nuts/docs/javadocs/javadoc_Security",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/javadocs/Security.md",sidebar_label:"Security",sidebar:"someSidebar",previous:{title:"Logging",permalink:"/nuts/docs/javadocs/javadoc_Logging"},next:{title:"SPI Base",permalink:"/nuts/docs/javadocs/javadoc_SPI_Base"}},c=[{value:"\u2615 NutsAddUserCommand",id:"-nutsaddusercommand",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods",children:[]}]},{value:"\u2615 NutsAuthenticationAgent",id:"-nutsauthenticationagent",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties-1",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-1",children:[]}]},{value:"\u2615 NutsRemoveUserCommand",id:"-nutsremoveusercommand",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties-2",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-2",children:[]}]},{value:"\u2615 NutsRepositorySecurityManager",id:"-nutsrepositorysecuritymanager",children:[{value:"\u2699 Instance Methods",id:"-instance-methods-3",children:[]}]},{value:"\u2615 NutsUpdateUserCommand",id:"-nutsupdateusercommand",children:[{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties-3",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-4",children:[]}]},{value:"\u2615 NutsWorkspaceSecurityManager",id:"-nutsworkspacesecuritymanager",children:[{value:"\u2699 Instance Methods",id:"-instance-methods-5",children:[]}]}],o={rightToc:c};function l(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"-nutsaddusercommand"},"\u2615 NutsAddUserCommand"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  class net.thevpc.nuts.NutsAddUserCommand\n")),Object(r.b)("p",null,"Command class for adding users to workspaces and repositories. All Command\nclasses have a 'run' method to perform the operation."),Object(r.b)("h3",{id:"-instance-properties"},"\ud83c\udf9b Instance Properties"),Object(r.b)("h4",{id:"-credentials"},"\ud83d\udcdd\ud83c\udf9b credentials"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsAddUserCommand  credentials\n char[] getCredentials()\n NutsAddUserCommand setCredentials(password)\n\n")),Object(r.b)("h4",{id:"-groups"},"\ud83d\udcc4\ud83c\udf9b groups"),Object(r.b)("p",null,"group list defined by ",Object(r.b)("inlineCode",{parentName:"p"}," #addGroup"),", @link ",Object(r.b)("inlineCode",{parentName:"p"}," #addGroups(String...)"),"} and @link ",Object(r.b)("inlineCode",{parentName:"p"}," #addGroups(Collection)"),"}"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String[] groups\n String[] getGroups()\n\n")),Object(r.b)("h4",{id:"-permissions"},"\ud83d\udcc4\ud83c\udf9b permissions"),Object(r.b)("p",null,"return permissions"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String[] permissions\n String[] getPermissions()\n\n")),Object(r.b)("h4",{id:"-remotecredentials"},"\ud83d\udcdd\ud83c\udf9b remoteCredentials"),Object(r.b)("p",null,"set remote credentials"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsAddUserCommand  remoteCredentials\n char[] getRemoteCredentials()\n NutsAddUserCommand setRemoteCredentials(password)\n\n")),Object(r.b)("h4",{id:"-remoteidentity"},"\ud83d\udcdd\ud83c\udf9b remoteIdentity"),Object(r.b)("p",null,"set remote identity"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsAddUserCommand  remoteIdentity\n String getRemoteIdentity()\n NutsAddUserCommand setRemoteIdentity(remoteIdentity)\n\n")),Object(r.b)("h4",{id:"-session"},"\u270f\ud83c\udf9b session"),Object(r.b)("p",null,"update session"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[write-only] NutsAddUserCommand  session\n NutsAddUserCommand setSession(session)\n\n")),Object(r.b)("h4",{id:"-username"},"\ud83d\udcdd\ud83c\udf9b username"),Object(r.b)("p",null,"set username"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsAddUserCommand  username\n String getUsername()\n NutsAddUserCommand setUsername(username)\n\n")),Object(r.b)("h3",{id:"-instance-methods"},"\u2699 Instance Methods"),Object(r.b)("h4",{id:"-addgroupgroup"},"\u2699 addGroup(group)"),Object(r.b)("p",null,"add group named  ",Object(r.b)("inlineCode",{parentName:"p"}," group"),"  to the specified user"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand addGroup(String group)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String group")," : group name")),Object(r.b)("h4",{id:"-addgroupsgroups"},"\u2699 addGroups(groups)"),Object(r.b)("p",null,"add group list named  ",Object(r.b)("inlineCode",{parentName:"p"}," groups"),"  to the specified user"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand addGroups(String groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String groups")," : group list")),Object(r.b)("h4",{id:"-addgroupsgroups-1"},"\u2699 addGroups(groups)"),Object(r.b)("p",null,"add group list named  ",Object(r.b)("inlineCode",{parentName:"p"}," groups"),"  to the specified user"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand addGroups(Collection\\<String\\> groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," groups")," : group list")),Object(r.b)("h4",{id:"-addpermissionpermission"},"\u2699 addPermission(permission)"),Object(r.b)("p",null,"add permission named  ",Object(r.b)("inlineCode",{parentName:"p"}," permission"),"  to the specified user"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand addPermission(String permission)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permission")," : permission name from {@code NutsConstants.Permissions}")),Object(r.b)("h4",{id:"-addpermissionspermissions"},"\u2699 addPermissions(permissions)"),Object(r.b)("p",null,"add permissions list named  ",Object(r.b)("inlineCode",{parentName:"p"}," permissions"),"  to the specified user"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand addPermissions(String permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permissions")," : group list")),Object(r.b)("h4",{id:"-addpermissionspermissions-1"},"\u2699 addPermissions(permissions)"),Object(r.b)("p",null,"add permissions list named  ",Object(r.b)("inlineCode",{parentName:"p"}," permissions"),"  to the specified user"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand addPermissions(Collection\\<String\\> permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," permissions")," : group list")),Object(r.b)("h4",{id:"-configureskipunsupported-args"},"\u2699 configure(skipUnsupported, args)"),Object(r.b)("p",null,"configure the current command with the given arguments. This is an\noverride of the ",Object(r.b)("inlineCode",{parentName:"p"},"NutsConfigurable#configure(boolean, java.lang.String...)"),"\nto help return a more specific return type;"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand configure(boolean skipUnsupported, String args)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"boolean skipUnsupported")," : when true, all unsupported options are skipped")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String args")," : argument to configure with"))),Object(r.b)("h4",{id:"-copysession"},"\u2699 copySession()"),Object(r.b)("p",null,"copy session"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand copySession()\n")),Object(r.b)("h4",{id:"-removegroupsgroups"},"\u2699 removeGroups(groups)"),Object(r.b)("p",null,"remove group"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand removeGroups(String groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String groups")," : new value")),Object(r.b)("h4",{id:"-removegroupsgroups-1"},"\u2699 removeGroups(groups)"),Object(r.b)("p",null,"remove groups"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand removeGroups(Collection\\<String\\> groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," groups")," : groups to remove")),Object(r.b)("h4",{id:"-removepermissionspermissions"},"\u2699 removePermissions(permissions)"),Object(r.b)("p",null,"remove permissions"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand removePermissions(String permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permissions")," : permission to remove")),Object(r.b)("h4",{id:"-removepermissionspermissions-1"},"\u2699 removePermissions(permissions)"),Object(r.b)("p",null,"remove permissions"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand removePermissions(Collection\\<String\\> permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," permissions")," : permissions to remove")),Object(r.b)("h4",{id:"-run"},"\u2699 run()"),Object(r.b)("p",null,"execute the command and return this instance"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand run()\n")),Object(r.b)("h2",{id:"-nutsauthenticationagent"},"\u2615 NutsAuthenticationAgent"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  class net.thevpc.nuts.NutsAuthenticationAgent\n")),Object(r.b)("p",null,"an Authentication Agent is responsible of storing and retrieving credentials\nin external repository (password manager, kwallet, keypads,\ngnome-keyring...). And Id of the stored password is then saved as plain text\nin nuts config file.\nCriteria type is a string representing authentication agent id"),Object(r.b)("h3",{id:"-instance-properties-1"},"\ud83c\udf9b Instance Properties"),Object(r.b)("h4",{id:"-id"},"\ud83d\udcc4\ud83c\udf9b id"),Object(r.b)("p",null,"agent id;"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String id\n String getId()\n\n")),Object(r.b)("h3",{id:"-instance-methods-1"},"\u2699 Instance Methods"),Object(r.b)("h4",{id:"-checkcredentialscredentialsid-password-envprovider-session"},"\u2699 checkCredentials(credentialsId, password, envProvider, session)"),Object(r.b)("p",null,"check if the given  ",Object(r.b)("inlineCode",{parentName:"p"},"password"),"  is valid against the one stored\nby the Authentication Agent for   ",Object(r.b)("inlineCode",{parentName:"p"},"credentialsId")," "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void checkCredentials(char[] credentialsId, char[] password, Map\\<String,String\\> envProvider, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentialsId")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] password")," : password")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Map\\<String,String",">"," envProvider")," : environment provider, nullable")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-createcredentialscredentials-allowretrieve-credentialid-envprovider-session"},"\u2699 createCredentials(credentials, allowRetrieve, credentialId, envProvider, session)"),Object(r.b)("p",null,"store credentials in the agent's and return the credential id to store\ninto the config. if credentialId is not null, the given credentialId will\nbe updated and the credentialId is returned. The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId")," ,if\npresent or returned, ",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with\nAuthenticationAgent'd id and ':' character"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"char[] createCredentials(char[] credentials, boolean allowRetrieve, char[] credentialId, Map\\<String,String\\> envProvider, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentials")," : credential")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"boolean allowRetrieve")," : when true {@link #getCredentials(char[], Map, NutsSession)}  }\ncan be invoked over {@code credentialId}")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialId")," : preferred credentialId, if null, a new one is created")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Map\\<String,String",">"," envProvider")," : environment provider, nullable")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-getcredentialscredentialsid-envprovider-session"},"\u2699 getCredentials(credentialsId, envProvider, session)"),Object(r.b)("p",null,"get the credentials for the given id. The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId"),"\n",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with AuthenticationAgent'd id and ':'\ncharacter"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"char[] getCredentials(char[] credentialsId, Map\\<String,String\\> envProvider, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentials-id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Map\\<String,String",">"," envProvider")," : environment provider, nullable")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-removecredentialscredentialsid-envprovider-session"},"\u2699 removeCredentials(credentialsId, envProvider, session)"),Object(r.b)("p",null,"remove existing credentials with the given id The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId"),"\n",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with AuthenticationAgent'd id and ':'\ncharacter"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean removeCredentials(char[] credentialsId, Map\\<String,String\\> envProvider, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentials-id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Map\\<String,String",">"," envProvider")," : environment provider, nullable")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h2",{id:"-nutsremoveusercommand"},"\u2615 NutsRemoveUserCommand"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  class net.thevpc.nuts.NutsRemoveUserCommand\n")),Object(r.b)("p",null,"Remove User Command"),Object(r.b)("h3",{id:"-instance-properties-2"},"\ud83c\udf9b Instance Properties"),Object(r.b)("h4",{id:"-session-1"},"\u270f\ud83c\udf9b session"),Object(r.b)("p",null,"update session"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[write-only] NutsRemoveUserCommand  session\n NutsRemoveUserCommand setSession(session)\n\n")),Object(r.b)("h4",{id:"-username-1"},"\ud83d\udcdd\ud83c\udf9b username"),Object(r.b)("p",null,"set username of user to remove"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsRemoveUserCommand  username\n String getUsername()\n NutsRemoveUserCommand setUsername(username)\n\n")),Object(r.b)("h3",{id:"-instance-methods-2"},"\u2699 Instance Methods"),Object(r.b)("h4",{id:"-configureskipunsupported-args-1"},"\u2699 configure(skipUnsupported, args)"),Object(r.b)("p",null,"configure the current command with the given arguments. This is an\noverride of the ",Object(r.b)("inlineCode",{parentName:"p"},"NutsConfigurable#configure(boolean, java.lang.String...)"),"\nto help return a more specific return type;"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsRemoveUserCommand configure(boolean skipUnsupported, String args)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"boolean skipUnsupported")," : when true, all unsupported options are skipped")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String args")," : argument to configure with"))),Object(r.b)("h4",{id:"-copysession-1"},"\u2699 copySession()"),Object(r.b)("p",null,"copy session"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsRemoveUserCommand copySession()\n")),Object(r.b)("h4",{id:"-run-1"},"\u2699 run()"),Object(r.b)("p",null,"execute the command and return this instance"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsRemoveUserCommand run()\n")),Object(r.b)("h2",{id:"-nutsrepositorysecuritymanager"},"\u2615 NutsRepositorySecurityManager"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  class net.thevpc.nuts.NutsRepositorySecurityManager\n")),Object(r.b)("h3",{id:"-instance-methods-3"},"\u2699 Instance Methods"),Object(r.b)("h4",{id:"-addusername-session"},"\u2699 addUser(name, session)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand addUser(String name, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String name")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : "))),Object(r.b)("h4",{id:"-checkallowedright-operationname-session"},"\u2699 checkAllowed(right, operationName, session)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsRepositorySecurityManager checkAllowed(String right, String operationName, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String right")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String operationName")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : "))),Object(r.b)("h4",{id:"-checkcredentialscredentialsid-password-session"},"\u2699 checkCredentials(credentialsId, password, session)"),Object(r.b)("p",null,"check if the given  ",Object(r.b)("inlineCode",{parentName:"p"},"password"),"  is valid against the one stored\nby the Authentication Agent for   ",Object(r.b)("inlineCode",{parentName:"p"},"credentialsId")," "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void checkCredentials(char[] credentialsId, char[] password, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentialsId")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] password")," : password")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-createcredentialscredentials-allowretrieve-credentialid-session"},"\u2699 createCredentials(credentials, allowRetrieve, credentialId, session)"),Object(r.b)("p",null,"store credentials in the agent's and return the credential id to store\ninto the config. if credentialId is not null, the given credentialId will\nbe updated and the credentialId is returned. The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId")," ,if\npresent or returned, ",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with\nAuthenticationAgent's id and ':' character"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"char[] createCredentials(char[] credentials, boolean allowRetrieve, char[] credentialId, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentials")," : credential")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"boolean allowRetrieve")," : when true {@link #getCredentials(char[], NutsSession)} can be invoked over {@code credentialId}")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialId")," : preferred credentialId, if null, a new one is created")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-finduserssession"},"\u2699 findUsers(session)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUser[] findUsers(NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"NutsSession session")," : ")),Object(r.b)("h4",{id:"-getauthenticationagentid-session"},"\u2699 getAuthenticationAgent(id, session)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAuthenticationAgent getAuthenticationAgent(String id, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String id")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : "))),Object(r.b)("h4",{id:"-getcredentialscredentialsid-session"},"\u2699 getCredentials(credentialsId, session)"),Object(r.b)("p",null,"get the credentials for the given id. The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId"),"\n",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with AuthenticationAgent'd id and ':'\ncharacter"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"char[] getCredentials(char[] credentialsId, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentials-id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-geteffectiveuserusername-session"},"\u2699 getEffectiveUser(username, session)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUser getEffectiveUser(String username, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String username")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : "))),Object(r.b)("h4",{id:"-isallowedright-session"},"\u2699 isAllowed(right, session)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean isAllowed(String right, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String right")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : "))),Object(r.b)("h4",{id:"-removecredentialscredentialsid-session"},"\u2699 removeCredentials(credentialsId, session)"),Object(r.b)("p",null,"remove existing credentials with the given id The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId"),"\n",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with AuthenticationAgent'd id and ':'\ncharacter"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean removeCredentials(char[] credentialsId, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentials-id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-removeusername-session"},"\u2699 removeUser(name, session)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsRemoveUserCommand removeUser(String name, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String name")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : "))),Object(r.b)("h4",{id:"-setauthenticationagentauthenticationagent-options"},"\u2699 setAuthenticationAgent(authenticationAgent, options)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsRepositorySecurityManager setAuthenticationAgent(String authenticationAgent, NutsUpdateOptions options)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String authenticationAgent")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsUpdateOptions options")," : "))),Object(r.b)("h4",{id:"-updateusername-session"},"\u2699 updateUser(name, session)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand updateUser(String name, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String name")," : ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : "))),Object(r.b)("h2",{id:"-nutsupdateusercommand"},"\u2615 NutsUpdateUserCommand"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  class net.thevpc.nuts.NutsUpdateUserCommand\n")),Object(r.b)("h3",{id:"-instance-properties-3"},"\ud83c\udf9b Instance Properties"),Object(r.b)("h4",{id:"-addgroups"},"\ud83d\udcc4\ud83c\udf9b addGroups"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String[] addGroups\n String[] getAddGroups()\n\n")),Object(r.b)("h4",{id:"-addpermissions"},"\ud83d\udcc4\ud83c\udf9b addPermissions"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String[] addPermissions\n String[] getAddPermissions()\n\n")),Object(r.b)("h4",{id:"-credentials-1"},"\ud83d\udcdd\ud83c\udf9b credentials"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsUpdateUserCommand  credentials\n char[] getCredentials()\n NutsUpdateUserCommand setCredentials(password)\n\n")),Object(r.b)("h4",{id:"-oldcredentials"},"\ud83d\udcdd\ud83c\udf9b oldCredentials"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsUpdateUserCommand  oldCredentials\n char[] getOldCredentials()\n NutsUpdateUserCommand setOldCredentials(oldCredentials)\n\n")),Object(r.b)("h4",{id:"-remotecredentials-1"},"\ud83d\udcdd\ud83c\udf9b remoteCredentials"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsUpdateUserCommand  remoteCredentials\n char[] getRemoteCredentials()\n NutsUpdateUserCommand setRemoteCredentials(password)\n\n")),Object(r.b)("h4",{id:"-remoteidentity-1"},"\ud83d\udcdd\ud83c\udf9b remoteIdentity"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsUpdateUserCommand  remoteIdentity\n String getRemoteIdentity()\n NutsUpdateUserCommand setRemoteIdentity(remoteIdentity)\n\n")),Object(r.b)("h4",{id:"-removegroups"},"\ud83d\udcc4\ud83c\udf9b removeGroups"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String[] removeGroups\n String[] getRemoveGroups()\n\n")),Object(r.b)("h4",{id:"-removepermissions"},"\ud83d\udcc4\ud83c\udf9b removePermissions"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String[] removePermissions\n String[] getRemovePermissions()\n\n")),Object(r.b)("h4",{id:"-resetgroups"},"\ud83d\udcdd\ud83c\udf9b resetGroups"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsUpdateUserCommand  resetGroups\n boolean isResetGroups()\n NutsUpdateUserCommand setResetGroups(resetGroups)\n\n")),Object(r.b)("h4",{id:"-resetpermissions"},"\ud83d\udcdd\ud83c\udf9b resetPermissions"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsUpdateUserCommand  resetPermissions\n boolean isResetPermissions()\n NutsUpdateUserCommand setResetPermissions(resetPermissions)\n\n")),Object(r.b)("h4",{id:"-session-2"},"\u270f\ud83c\udf9b session"),Object(r.b)("p",null,"update session"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[write-only] NutsUpdateUserCommand  session\n NutsUpdateUserCommand setSession(session)\n\n")),Object(r.b)("h4",{id:"-username-2"},"\ud83d\udcdd\ud83c\udf9b username"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsUpdateUserCommand  username\n String getUsername()\n NutsUpdateUserCommand setUsername(login)\n\n")),Object(r.b)("h3",{id:"-instance-methods-4"},"\u2699 Instance Methods"),Object(r.b)("h4",{id:"-addgroupgroup-1"},"\u2699 addGroup(group)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand addGroup(String group)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String group")," : ")),Object(r.b)("h4",{id:"-addgroupsgroups-2"},"\u2699 addGroups(groups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand addGroups(String groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String groups")," : ")),Object(r.b)("h4",{id:"-addgroupsgroups-3"},"\u2699 addGroups(groups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand addGroups(Collection\\<String\\> groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," groups")," : ")),Object(r.b)("h4",{id:"-addpermissionpermission-1"},"\u2699 addPermission(permission)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand addPermission(String permission)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permission")," : ")),Object(r.b)("h4",{id:"-addpermissionspermissions-2"},"\u2699 addPermissions(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand addPermissions(String permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permissions")," : ")),Object(r.b)("h4",{id:"-addpermissionspermissions-3"},"\u2699 addPermissions(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand addPermissions(Collection\\<String\\> permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," permissions")," : ")),Object(r.b)("h4",{id:"-configureskipunsupported-args-2"},"\u2699 configure(skipUnsupported, args)"),Object(r.b)("p",null,"configure the current command with the given arguments. This is an\noverride of the ",Object(r.b)("inlineCode",{parentName:"p"},"NutsConfigurable#configure(boolean, java.lang.String...)"),"\nto help return a more specific return type;"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand configure(boolean skipUnsupported, String args)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"boolean skipUnsupported")," : when true, all unsupported options are skipped")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String args")," : argument to configure with"))),Object(r.b)("h4",{id:"-copysession-2"},"\u2699 copySession()"),Object(r.b)("p",null,"copy session"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand copySession()\n")),Object(r.b)("h4",{id:"-credentialspassword"},"\u2699 credentials(password)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand credentials(char[] password)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"char[] password")," : ")),Object(r.b)("h4",{id:"-oldcredentialspassword"},"\u2699 oldCredentials(password)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand oldCredentials(char[] password)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"char[] password")," : ")),Object(r.b)("h4",{id:"-remotecredentialspassword"},"\u2699 remoteCredentials(password)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand remoteCredentials(char[] password)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"char[] password")," : ")),Object(r.b)("h4",{id:"-remoteidentityremoteidentity"},"\u2699 remoteIdentity(remoteIdentity)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand remoteIdentity(String remoteIdentity)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String remoteIdentity")," : ")),Object(r.b)("h4",{id:"-removegroupgroup"},"\u2699 removeGroup(group)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand removeGroup(String group)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String group")," : ")),Object(r.b)("h4",{id:"-removegroupsgroups-2"},"\u2699 removeGroups(groups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand removeGroups(String groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String groups")," : ")),Object(r.b)("h4",{id:"-removegroupsgroups-3"},"\u2699 removeGroups(groups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand removeGroups(Collection\\<String\\> groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," groups")," : ")),Object(r.b)("h4",{id:"-removepermissionpermission"},"\u2699 removePermission(permission)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand removePermission(String permission)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permission")," : ")),Object(r.b)("h4",{id:"-removepermissionspermissions-2"},"\u2699 removePermissions(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand removePermissions(String permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permissions")," : ")),Object(r.b)("h4",{id:"-removepermissionspermissions-3"},"\u2699 removePermissions(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand removePermissions(Collection\\<String\\> permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," permissions")," : ")),Object(r.b)("h4",{id:"-resetgroups-1"},"\u2699 resetGroups()"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand resetGroups()\n")),Object(r.b)("h4",{id:"-resetgroupsresetgroups"},"\u2699 resetGroups(resetGroups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand resetGroups(boolean resetGroups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"boolean resetGroups")," : ")),Object(r.b)("h4",{id:"-resetpermissions-1"},"\u2699 resetPermissions()"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand resetPermissions()\n")),Object(r.b)("h4",{id:"-resetpermissionsresetpermissions"},"\u2699 resetPermissions(resetPermissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand resetPermissions(boolean resetPermissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"boolean resetPermissions")," : ")),Object(r.b)("h4",{id:"-run-2"},"\u2699 run()"),Object(r.b)("p",null,"execute the command and return this instance"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand run()\n")),Object(r.b)("h4",{id:"-undoaddgroupgroup"},"\u2699 undoAddGroup(group)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoAddGroup(String group)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String group")," : ")),Object(r.b)("h4",{id:"-undoaddgroupsgroups"},"\u2699 undoAddGroups(groups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoAddGroups(String groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String groups")," : ")),Object(r.b)("h4",{id:"-undoaddgroupsgroups-1"},"\u2699 undoAddGroups(groups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoAddGroups(Collection\\<String\\> groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," groups")," : ")),Object(r.b)("h4",{id:"-undoaddpermissionpermissions"},"\u2699 undoAddPermission(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoAddPermission(String permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permissions")," : ")),Object(r.b)("h4",{id:"-undoaddpermissionspermissions"},"\u2699 undoAddPermissions(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoAddPermissions(String permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permissions")," : ")),Object(r.b)("h4",{id:"-undoaddpermissionspermissions-1"},"\u2699 undoAddPermissions(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoAddPermissions(Collection\\<String\\> permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," permissions")," : ")),Object(r.b)("h4",{id:"-undoremovegroupsgroups"},"\u2699 undoRemoveGroups(groups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoRemoveGroups(String groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String groups")," : ")),Object(r.b)("h4",{id:"-undoremovegroupsgroups-1"},"\u2699 undoRemoveGroups(groups)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoRemoveGroups(Collection\\<String\\> groups)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," groups")," : ")),Object(r.b)("h4",{id:"-undoremovepermissionspermissions"},"\u2699 undoRemovePermissions(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoRemovePermissions(String permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"String permissions")," : ")),Object(r.b)("h4",{id:"-undoremovepermissionspermissions-1"},"\u2699 undoRemovePermissions(permissions)"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand undoRemovePermissions(Collection\\<String\\> permissions)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Collection\\<String",">"," permissions")," : ")),Object(r.b)("h2",{id:"-nutsworkspacesecuritymanager"},"\u2615 NutsWorkspaceSecurityManager"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  class net.thevpc.nuts.NutsWorkspaceSecurityManager\n")),Object(r.b)("p",null,"Workspace Security configuration manager"),Object(r.b)("h3",{id:"-instance-methods-5"},"\u2699 Instance Methods"),Object(r.b)("h4",{id:"-addusername-session-1"},"\u2699 addUser(name, session)"),Object(r.b)("p",null,"create a User Create command.\nNo user will be added when simply calling this method.\nYou must fill in command parameters then call ",Object(r.b)("inlineCode",{parentName:"p"}," NutsAddUserCommand#run()"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAddUserCommand addUser(String name, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String name")," : user name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-checkallowedpermission-operationname-session"},"\u2699 checkAllowed(permission, operationName, session)"),Object(r.b)("p",null,"check if allowed and throw a Security exception if not."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsWorkspaceSecurityManager checkAllowed(String permission, String operationName, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String permission")," : permission name. see {@code NutsConstants.Rights } class")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String operationName")," : operation name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-checkcredentialscredentialsid-password-session-1"},"\u2699 checkCredentials(credentialsId, password, session)"),Object(r.b)("p",null,"check if the given  ",Object(r.b)("inlineCode",{parentName:"p"},"password"),"  is valid against the one stored\nby the Authentication Agent for   ",Object(r.b)("inlineCode",{parentName:"p"},"credentialsId")," "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void checkCredentials(char[] credentialsId, char[] password, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentialsId")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] password")," : password")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-createcredentialscredentials-allowretrieve-credentialid-session-1"},"\u2699 createCredentials(credentials, allowRetrieve, credentialId, session)"),Object(r.b)("p",null,"store credentials in the agent's and return the credential id to store\ninto the config. if credentialId is not null, the given credentialId will\nbe updated and the credentialId is returned. The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId")," ,if\npresent or returned, ",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with\nAuthenticationAgent's id and ':' character"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"char[] createCredentials(char[] credentials, boolean allowRetrieve, char[] credentialId, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentials")," : credential")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"boolean allowRetrieve")," : when true {@link #getCredentials(char[], NutsSession)} can be\ninvoked over {@code credentialId}")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialId")," : preferred credentialId, if null, a new one is created")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-finduserusername-session"},"\u2699 findUser(username, session)"),Object(r.b)("p",null,"find user with the given name or null."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUser findUser(String username, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String username")," : user name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-finduserssession-1"},"\u2699 findUsers(session)"),Object(r.b)("p",null,"find all registered users"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUser[] findUsers(NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"NutsSession session")," : session")),Object(r.b)("h4",{id:"-getauthenticationagentauthenticationagentid-session"},"\u2699 getAuthenticationAgent(authenticationAgentId, session)"),Object(r.b)("p",null,"get authentication agent with id  ",Object(r.b)("inlineCode",{parentName:"p"}," authenticationAgentId")," .\nif is blank, return default authentication agent"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsAuthenticationAgent getAuthenticationAgent(String authenticationAgentId, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String authenticationAgentId")," : agent id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-getcredentialscredentialsid-session-1"},"\u2699 getCredentials(credentialsId, session)"),Object(r.b)("p",null,"get the credentials for the given id. The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId"),"\n",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with AuthenticationAgent'd id and ':'\ncharacter"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"char[] getCredentials(char[] credentialsId, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentials-id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-getcurrentloginstacksession"},"\u2699 getCurrentLoginStack(session)"),Object(r.b)("p",null,"current user stack.\nthis is useful when login with multiple user identities."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"String[] getCurrentLoginStack(NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"NutsSession session")," : session")),Object(r.b)("h4",{id:"-getcurrentusernamesession"},"\u2699 getCurrentUsername(session)"),Object(r.b)("p",null,"current user"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"String getCurrentUsername(NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"NutsSession session")," : session")),Object(r.b)("h4",{id:"-isadminsession"},"\u2699 isAdmin(session)"),Object(r.b)("p",null,"return true if current user has admin privileges"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean isAdmin(NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"NutsSession session")," : session")),Object(r.b)("h4",{id:"-isallowedpermission-session"},"\u2699 isAllowed(permission, session)"),Object(r.b)("p",null,"return true if permission is valid and allowed for the current user."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean isAllowed(String permission, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String permission")," : permission name. see {@code NutsConstants.Rights } class")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-issecuresession"},"\u2699 isSecure(session)"),Object(r.b)("p",null,"return true if workspace is running secure mode"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean isSecure(NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"NutsSession session")," : session")),Object(r.b)("h4",{id:"-loginhandler-session"},"\u2699 login(handler, session)"),Object(r.b)("p",null,"impersonate user and log as a distinct user with the given credentials and stack\nuser name so that it can be retrieved using @{code getCurrentLoginStack()}."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsWorkspaceSecurityManager login(CallbackHandler handler, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"CallbackHandler handler")," : security handler")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-loginusername-password-session"},"\u2699 login(username, password, session)"),Object(r.b)("p",null,"impersonate user and log as a distinct user with the given credentials."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsWorkspaceSecurityManager login(String username, char[] password, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String username")," : user name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] password")," : user password")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-logoutsession"},"\u2699 logout(session)"),Object(r.b)("p",null,"log out from last logged in user (if any) and pop out from user name stack."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsWorkspaceSecurityManager logout(NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"NutsSession session")," : session")),Object(r.b)("h4",{id:"-removecredentialscredentialsid-session-1"},"\u2699 removeCredentials(credentialsId, session)"),Object(r.b)("p",null,"remove existing credentials with the given id The  ",Object(r.b)("inlineCode",{parentName:"p"}," credentialsId"),"\n",Object(r.b)("strong",{parentName:"p"},"MUST")," be prefixed with AuthenticationAgent'd id and ':'\ncharacter"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean removeCredentials(char[] credentialsId, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] credentialsId")," : credentials-id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-removeusername-session-1"},"\u2699 removeUser(name, session)"),Object(r.b)("p",null,"create a Remove Create command.\nNo user will be removed when simply calling this method.\nYou must fill in command parameters then call ",Object(r.b)("inlineCode",{parentName:"p"}," NutsRemoveUserCommand#run()"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsRemoveUserCommand removeUser(String name, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String name")," : user name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))),Object(r.b)("h4",{id:"-setauthenticationagentauthenticationagentid-options"},"\u2699 setAuthenticationAgent(authenticationAgentId, options)"),Object(r.b)("p",null,"update default authentication agent."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsWorkspaceSecurityManager setAuthenticationAgent(String authenticationAgentId, NutsUpdateOptions options)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String authenticationAgentId")," : authentication agent id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsUpdateOptions options")," : update options"))),Object(r.b)("h4",{id:"-setsecuremodesecure-adminpassword-options"},"\u2699 setSecureMode(secure, adminPassword, options)"),Object(r.b)("p",null,"switch from/to secure mode.\nwhen secure mode is disabled, no authorizations are checked against."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean setSecureMode(boolean secure, char[] adminPassword, NutsUpdateOptions options)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"boolean secure")," : true if secure mode")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"char[] adminPassword")," : password for admin user")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsUpdateOptions options")," : update options"))),Object(r.b)("h4",{id:"-updateusername-session-1"},"\u2699 updateUser(name, session)"),Object(r.b)("p",null,"create a Update Create command.\nNo user will be updated when simply calling this method.\nYou must fill in command parameters then call ",Object(r.b)("inlineCode",{parentName:"p"}," NutsUpdateUserCommand#run()"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsUpdateUserCommand updateUser(String name, NutsSession session)\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"String name")," : user name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NutsSession session")," : session"))))}l.isMDXComponent=!0}}]);