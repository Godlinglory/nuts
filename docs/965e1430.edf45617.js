(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{116:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var a=t(0),i=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),s=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=s(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),b=s(t),u=a,m=b["".concat(l,".").concat(u)]||b[u]||d[u]||o;return t?i.a.createElement(m,c(c({ref:n},p),{},{components:t})):i.a.createElement(m,c({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var c={};for(var r in n)hasOwnProperty.call(n,r)&&(c[r]=n[r]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var p=2;p<o;p++)l[p]=t[p];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},90:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return r})),t.d(n,"default",(function(){return s}));var a=t(2),i=t(6),o=(t(0),t(116)),l={id:"javadoc_Application",title:"Application",sidebar_label:"Application"},c={unversionedId:"javadocs/javadoc_Application",id:"javadocs/javadoc_Application",isDocsHomePage:!1,title:"Application",description:"\u2615 NutsApplication",source:"@site/docs/javadocs/Application.md",permalink:"/nuts/docs/javadocs/javadoc_Application",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/javadocs/Application.md",sidebar_label:"Application",sidebar:"someSidebar",previous:{title:"Command Line",permalink:"/nuts/docs/javadocs/javadoc_Command_Line"},next:{title:"Descriptor",permalink:"/nuts/docs/javadocs/javadoc_Descriptor"}},r=[{value:"\u2615 NutsApplication",id:"-nutsapplication",children:[{value:"\ud83d\udce2\u2699 Static Methods",id:"-static-methods",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods",children:[]}]},{value:"\u2615 NutsApplicationContext",id:"-nutsapplicationcontext",children:[{value:"\ud83d\uddd2 Instance Fields",id:"-instance-fields",children:[]},{value:"\ud83c\udf9b Instance Properties",id:"-instance-properties",children:[]},{value:"\u2699 Instance Methods",id:"-instance-methods-1",children:[]}]},{value:"\u2615 NutsApplicationLifeCycle",id:"-nutsapplicationlifecycle",children:[{value:"\u2699 Instance Methods",id:"-instance-methods-2",children:[]}]},{value:"\u2615 NutsApplications",id:"-nutsapplications",children:[{value:"\ud83d\udce2\u2744 Constant Fields",id:"-constant-fields",children:[]},{value:"\ud83d\udce2\ud83c\udf9b Static Properties",id:"-static-properties",children:[]},{value:"\ud83d\udce2\u2699 Static Methods",id:"-static-methods-1",children:[]},{value:"\ud83e\ude84 Constructors",id:"\ud83e\ude84-constructors",children:[]}]}],p={rightToc:r};function s(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"-nutsapplication"},"\u2615 NutsApplication"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  abstract  net.vpc.app.nuts.NutsApplication\n")),Object(o.b)("p",null,"Nuts Application is the Top Level class to be handled by nuts as rich console\napplication. By default NutsApplication classes :"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"have a nutsApplication=true in their descriptor file"),Object(o.b)("li",{parentName:"ul"},"support inheritance of all workspace options (from caller nuts\nprocess)"),Object(o.b)("li",{parentName:"ul"},"enables auto-complete mode to help forecasting the next token in the\ncommand line"),Object(o.b)("li",{parentName:"ul"},"enables install mode to be executed when the jar is installed in nuts\nrepos"),Object(o.b)("li",{parentName:"ul"},"enables uninstall mode to be executed when the jar is uninstaleld from\nnuts repos"),Object(o.b)("li",{parentName:"ul"},"enables update mode to be executed when the a new version of the same jar\nhas been installed"),Object(o.b)("li",{parentName:"ul"},"have many default options enabled (such as --help, --version, --json,\n--table, etc.) and thus support natively multi output channels")),Object(o.b)("p",null,"Typically a Nuts Application follows this code pattern :"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'\n  public class MyApplication extends NutsApplication{\n    public static void main(String[] args) {\n        // just create an instance and call runAndExit in the main method\n        new MyApplication().runAndExit(args);\n    }\n    // do the main staff in launch method\n    public void run(NutsApplicationContext appContext) {\n        boolean myBooleanOption=false;\n        NutsCommandLine cmdLine=appContext.getCommandLine()\n        boolean boolOption=false;\n        String stringOption=null;\n        Argument a;\n        while(cmdLine.hasNext()){\n            if(appContext.configureFirst(cmdLine)){\n                //do nothing\n            }else {\n                 a=cmdLine.peek();\n                 switch(a.getStringKey())[\n                     case "-o": case "--option":{\n                         boolOption=cmdLine.nextBoolean().getBooleanValue();\n                         break;\n                     }\n                     case "-n": case "--name":{\n                         stringOption=cmdLine.nextString().getStringValue();\n                         break;\n                     }\n                     default:{\n                         cmdLine.unexpectedArgument();\n                     }\n                 }\n            }\n        }\n        // test if application is running in exec mode\n        // (and not in autoComplete mode)\n        if(cmdLine.isExecMode()){\n             //do the good staff here\n        }\n    }\n  }\n\n')),Object(o.b)("p",null,"another example of using this class is :"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'\n    public class HLMain extends NutsApplication {\n        public static void main(String[] args) {\n           // just create an instance and call runAndExit in the main method\n           new HLMain().runAndExit(args);\n        }\n\n        &#64;Override\n        public void run(NutsApplicationContext applicationContext) {\n            applicationContext.processCommandLine(new NutsCommandLineProcessor() {\n                HLCWithOptions hl = new HL().withOptions();\n                boolean noMoreOptions=false;\n                &#64;Override\n                public boolean processOption(NutsArgument argument, NutsCommandLine cmdLine) {\n                    if(!noMoreOptions){\n                        return false;\n                    }\n                    switch (argument.getStringKey()) {\n                        case "--clean": {\n                            hl.clean(cmdLine.nextBoolean().getBooleanValue());\n                            return true;\n                        }\n                        case "-i":\n                        case "--incremental":{\n                            hl.setIncremental(cmdLine.nextBoolean().getBooleanValue());\n                            return true;\n                        }\n                        case "-r":\n                        case "--root":{\n                            hl.setProjectRoot(cmdLine.nextString().getStringValue());\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n\n                &#64;Override\n                public boolean processNonOption(NutsArgument argument, NutsCommandLine cmdLine) {\n                    String s = argument.getString();\n                    if(isURL(s)){\n                        hl.includeFileURL(s);\n                    }else{\n                        hl.includeFile(s);\n                    }\n                    noMoreOptions=true;\n                    return true;\n                }\n\n                private boolean isURL(String s) {\n                    return\n                            s.startsWith("file:")\n                            ||s.startsWith("http:")\n                            ||s.startsWith("https:")\n                            ;\n                }\n\n                &#64;Override\n                public void exec() {\n                    hl.compile();\n                }\n            });\n        }\n    }\n\n')),Object(o.b)("h3",{id:"-static-methods"},"\ud83d\udce2\u2699 Static Methods"),Object(o.b)("h4",{id:"-mainapptype-args"},"\ud83d\udce2\u2699 main(appType, args)"),Object(o.b)("p",null,"creates an instance of ",Object(o.b)("inlineCode",{parentName:"p"}," appType")," and calls runAndExit."),Object(o.b)("p",null,"This method is intended be called in main methods of NutsApplication\nclasses."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void main(Class\\<T\\> appType, String[] args)\n")),Object(o.b)("p",null,"application type\nmain arguments"),Object(o.b)("h3",{id:"-instance-methods"},"\u2699 Instance Methods"),Object(o.b)("h4",{id:"-createapplicationcontextws-args-starttimemillis"},"\u2699 createApplicationContext(ws, args, startTimeMillis)"),Object(o.b)("p",null,"create application context or return null for default"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsApplicationContext createApplicationContext(NutsWorkspace ws, String[] args, long startTimeMillis)\n")),Object(o.b)("p",null,"workspace\narguments\nstart time"),Object(o.b)("h4",{id:"-oninstallapplicationapplicationcontext"},"\u2699 onInstallApplication(applicationContext)"),Object(o.b)("p",null,"this method should be overridden to perform specific business when\napplication is installed"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void onInstallApplication(NutsApplicationContext applicationContext)\n")),Object(o.b)("p",null,"context"),Object(o.b)("h4",{id:"-onuninstallapplicationapplicationcontext"},"\u2699 onUninstallApplication(applicationContext)"),Object(o.b)("p",null,"this method should be overridden to perform specific business when\napplication is uninstalled"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void onUninstallApplication(NutsApplicationContext applicationContext)\n")),Object(o.b)("p",null,"context"),Object(o.b)("h4",{id:"-onupdateapplicationapplicationcontext"},"\u2699 onUpdateApplication(applicationContext)"),Object(o.b)("p",null,"this method should be overridden to perform specific business when\napplication is updated"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void onUpdateApplication(NutsApplicationContext applicationContext)\n")),Object(o.b)("p",null,"context"),Object(o.b)("h4",{id:"-runapplicationcontext"},"\u2699 run(applicationContext)"),Object(o.b)("p",null,"run application within the given context"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void run(NutsApplicationContext applicationContext)\n")),Object(o.b)("p",null,"app context"),Object(o.b)("h4",{id:"-runargs"},"\u2699 run(args)"),Object(o.b)("p",null,"run the application with the given arguments. If the first arguments is\nin the form of --nuts-exec-mode=... the argument will be removed and the\ncorresponding mode is activated."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void run(String[] args)\n")),Object(o.b)("p",null,"application arguments. should not be null or contain nulls"),Object(o.b)("h4",{id:"-runsession-args"},"\u2699 run(session, args)"),Object(o.b)("p",null,"run the application with the given arguments against the given workspace\nIf the first arguments is in the form of --nuts-exec-mode=... the\nargument will be removed and the corresponding mode is activated."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void run(NutsSession session, String[] args)\n")),Object(o.b)("p",null,"session (can be null)\napplication arguments. should not be null or contain nulls"),Object(o.b)("h4",{id:"-runandexitargs"},"\u2699 runAndExit(args)"),Object(o.b)("p",null,"run the application and ",Object(o.b)("strong",{parentName:"p"},"EXIT")," process"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void runAndExit(String[] args)\n")),Object(o.b)("p",null,"arguments"),Object(o.b)("h4",{id:"-tostring"},"\u2699 toString()"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"String toString()\n")),Object(o.b)("h2",{id:"-nutsapplicationcontext"},"\u2615 NutsApplicationContext"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsApplicationContext\n")),Object(o.b)("p",null,"Application context that store all relevant information about application\nexecution mode, workspace, etc."),Object(o.b)("h3",{id:"-instance-fields"},"\ud83d\uddd2 Instance Fields"),Object(o.b)("h4",{id:"-auto_complete_candidate_prefix"},"\ud83d\uddd2 AUTO_COMPLETE_CANDIDATE_PREFIX"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),' String AUTO_COMPLETE_CANDIDATE_PREFIX = "@@Candidate@@: "\n')),Object(o.b)("h3",{id:"-instance-properties"},"\ud83c\udf9b Instance Properties"),Object(o.b)("h4",{id:"-appclass"},"\ud83d\udcc4\ud83c\udf9b appClass"),Object(o.b)("p",null,"application class reference"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Class appClass\n Class getAppClass()\n")),Object(o.b)("h4",{id:"-appid"},"\ud83d\udcc4\ud83c\udf9b appId"),Object(o.b)("p",null,"application nuts id"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  NutsId appId\n NutsId getAppId()\n")),Object(o.b)("h4",{id:"-apppreviousversion"},"\ud83d\udcc4\ud83c\udf9b appPreviousVersion"),Object(o.b)("p",null,"previous version (applicable in update mode)"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  NutsVersion appPreviousVersion\n NutsVersion getAppPreviousVersion()\n")),Object(o.b)("h4",{id:"-appversion"},"\ud83d\udcc4\ud83c\udf9b appVersion"),Object(o.b)("p",null,"application version"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  NutsVersion appVersion\n NutsVersion getAppVersion()\n")),Object(o.b)("h4",{id:"-appsfolder"},"\ud83d\udcc4\ud83c\udf9b appsFolder"),Object(o.b)("p",null,"path to the apps folder of this application"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path appsFolder\n Path getAppsFolder()\n")),Object(o.b)("h4",{id:"-arguments"},"\ud83d\udcc4\ud83c\udf9b arguments"),Object(o.b)("p",null,"application arguments"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String[] arguments\n String[] getArguments()\n")),Object(o.b)("h4",{id:"-autocomplete"},"\ud83d\udcc4\ud83c\udf9b autoComplete"),Object(o.b)("p",null,"Auto complete instance associated with the\n",Object(o.b)("inlineCode",{parentName:"p"}," NutsApplicationMode#AUTO_COMPLETE")," mode"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  NutsCommandAutoComplete autoComplete\n NutsCommandAutoComplete getAutoComplete()\n")),Object(o.b)("h4",{id:"-cachefolder"},"\ud83d\udcc4\ud83c\udf9b cacheFolder"),Object(o.b)("p",null,"path to the cache files folder of this application"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path cacheFolder\n Path getCacheFolder()\n")),Object(o.b)("h4",{id:"-commandline"},"\ud83d\udcc4\ud83c\udf9b commandLine"),Object(o.b)("p",null,"a new instance of command line arguments to process filled\nwith application's arguments."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  NutsCommandLine commandLine\n NutsCommandLine getCommandLine()\n")),Object(o.b)("h4",{id:"-configfolder"},"\ud83d\udcc4\ud83c\udf9b configFolder"),Object(o.b)("p",null,"path to the configuration folder of this application"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path configFolder\n Path getConfigFolder()\n")),Object(o.b)("h4",{id:"-execmode"},"\ud83d\udcc4\ud83c\udf9b execMode"),Object(o.b)("p",null,"return true if ",Object(o.b)("inlineCode",{parentName:"p"},"getAutoComplete()==null")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  boolean execMode\n boolean isExecMode()\n")),Object(o.b)("h4",{id:"-libfolder"},"\ud83d\udcc4\ud83c\udf9b libFolder"),Object(o.b)("p",null,"path to the libraries files (non applications) folder of this application"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path libFolder\n Path getLibFolder()\n")),Object(o.b)("h4",{id:"-logfolder"},"\ud83d\udcc4\ud83c\udf9b logFolder"),Object(o.b)("p",null,"path to the log folder of this application"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path logFolder\n Path getLogFolder()\n")),Object(o.b)("h4",{id:"-mode"},"\ud83d\udcc4\ud83c\udf9b mode"),Object(o.b)("p",null,"application execution mode"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  NutsApplicationMode mode\n NutsApplicationMode getMode()\n")),Object(o.b)("h4",{id:"-modearguments"},"\ud83d\udcc4\ud83c\udf9b modeArguments"),Object(o.b)("p",null,"application execution mode extra arguments"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  String[] modeArguments\n String[] getModeArguments()\n")),Object(o.b)("h4",{id:"-runfolder"},"\ud83d\udcc4\ud83c\udf9b runFolder"),Object(o.b)("p",null,"path to the temporary run files (non essential sockets etc...) folder of\nthis application"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path runFolder\n Path getRunFolder()\n")),Object(o.b)("h4",{id:"-session"},"\ud83d\udcdd\ud83c\udf9b session"),Object(o.b)("p",null,"update session"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-write] NutsApplicationContext  session\n NutsSession getSession()\n NutsApplicationContext setSession(session)\n")),Object(o.b)("h4",{id:"-sharedappsfolder"},"\ud83d\udcc4\ud83c\udf9b sharedAppsFolder"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path sharedAppsFolder\n Path getSharedAppsFolder()\n")),Object(o.b)("h4",{id:"-sharedconfigfolder"},"\ud83d\udcc4\ud83c\udf9b sharedConfigFolder"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path sharedConfigFolder\n Path getSharedConfigFolder()\n")),Object(o.b)("h4",{id:"-sharedlibfolder"},"\ud83d\udcc4\ud83c\udf9b sharedLibFolder"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path sharedLibFolder\n Path getSharedLibFolder()\n")),Object(o.b)("h4",{id:"-sharedlogfolder"},"\ud83d\udcc4\ud83c\udf9b sharedLogFolder"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path sharedLogFolder\n Path getSharedLogFolder()\n")),Object(o.b)("h4",{id:"-sharedrunfolder"},"\ud83d\udcc4\ud83c\udf9b sharedRunFolder"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path sharedRunFolder\n Path getSharedRunFolder()\n")),Object(o.b)("h4",{id:"-sharedtempfolder"},"\ud83d\udcc4\ud83c\udf9b sharedTempFolder"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path sharedTempFolder\n Path getSharedTempFolder()\n")),Object(o.b)("h4",{id:"-sharedvarfolder"},"\ud83d\udcc4\ud83c\udf9b sharedVarFolder"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path sharedVarFolder\n Path getSharedVarFolder()\n")),Object(o.b)("h4",{id:"-starttimemillis"},"\ud83d\udcc4\ud83c\udf9b startTimeMillis"),Object(o.b)("p",null,"application start time in milli-seconds"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  long startTimeMillis\n long getStartTimeMillis()\n")),Object(o.b)("h4",{id:"-tempfolder"},"\ud83d\udcc4\ud83c\udf9b tempFolder"),Object(o.b)("p",null,"path to the temporary files folder of this application"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path tempFolder\n Path getTempFolder()\n")),Object(o.b)("h4",{id:"-varfolder"},"\ud83d\udcc4\ud83c\udf9b varFolder"),Object(o.b)("p",null,"path to the variable files (aka /var in POSIX systems) folder of this\napplication"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  Path varFolder\n Path getVarFolder()\n")),Object(o.b)("h4",{id:"-workspace"},"\ud83d\udcc4\ud83c\udf9b workspace"),Object(o.b)("p",null,"current workspace"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only]  NutsWorkspace workspace\n NutsWorkspace getWorkspace()\n")),Object(o.b)("h3",{id:"-instance-methods-1"},"\u2699 Instance Methods"),Object(o.b)("h4",{id:"-configureskipunsupported-args"},"\u2699 configure(skipUnsupported, args)"),Object(o.b)("p",null,"configure the current command with the given arguments. This is an\noverride of the ",Object(o.b)("inlineCode",{parentName:"p"},"NutsConfigurable#configure(boolean, java.lang.String...)"),"\nto help return a more specific return type;"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsApplicationContext configure(boolean skipUnsupported, String args)\n")),Object(o.b)("p",null,"when true, all unsupported options are skipped\nargument to configure with"),Object(o.b)("h4",{id:"-configurelastcommandline"},"\u2699 configureLast(commandLine)"),Object(o.b)("p",null,"calls configureFirst and ensure this is the last test"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"boolean configureLast(NutsCommandLine commandLine)\n")),Object(o.b)("p",null,"arguments to configure with"),Object(o.b)("h4",{id:"-getfolderlocation"},"\u2699 getFolder(location)"),Object(o.b)("p",null,"application store folder path for the given ",Object(o.b)("inlineCode",{parentName:"p"}," location")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"Path getFolder(NutsStoreLocation location)\n")),Object(o.b)("p",null,"location type"),Object(o.b)("h4",{id:"-getsharedfolderlocation"},"\u2699 getSharedFolder(location)"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"Path getSharedFolder(NutsStoreLocation location)\n")),Object(o.b)("p",null,"null"),Object(o.b)("h4",{id:"-printhelp"},"\u2699 printHelp()"),Object(o.b)("p",null,"print application help to the default out (",Object(o.b)("inlineCode",{parentName:"p"}," getSession().out()"),")\nprint stream."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void printHelp()\n")),Object(o.b)("h4",{id:"-processcommandlinecommandlineprocessor"},"\u2699 processCommandLine(commandLineProcessor)"),Object(o.b)("p",null,"create new NutsCommandLine and consume it with the given processor.\nThis method is equivalent to the following code"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"\n        NutsCommandLine cmdLine=getCommandLine();\n        NutsArgument a;\n        while (cmdLine.hasNext()) {\n            if (!this.configureFirst(cmdLine)) {\n                a = cmdLine.peek();\n                if(a.isOption()){\n                    if(!commandLineProcessor.processOption(a,cmdLine)){\n                        cmdLine.unexpectedArgument();\n                    }\n                }else{\n                    if(!commandLineProcessor.processNonOption(a,cmdLine)){\n                        cmdLine.unexpectedArgument();\n                    }\n                }\n            }\n        }\n        // test if application is running in exec mode\n        // (and not in autoComplete mode)\n        if (cmdLine.isExecMode()) {\n            //do the good staff here\n            commandLineProcessor.exec();\n        }\n\n")),Object(o.b)("p",null,"This as an example of its usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'\n    applicationContext.processCommandLine(new NutsCommandLineProcessor() {\n            HLCWithOptions hl = new HL().withOptions();\n            boolean noMoreOptions=false;\n            &#64;Override\n            public boolean processOption(NutsArgument argument, NutsCommandLine cmdLine) {\n                if(!noMoreOptions){\n                    return false;\n                }\n                switch (argument.getStringKey()) {\n                    case "--clean": {\n                        hl.clean(cmdLine.nextBoolean().getBooleanValue());\n                        return true;\n                    }\n                    case "-i":\n                    case "--incremental":{\n                        hl.setIncremental(cmdLine.nextBoolean().getBooleanValue());\n                        return true;\n                    }\n                    case "-r":\n                    case "--root":{\n                        hl.setProjectRoot(cmdLine.nextString().getStringValue());\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n            &#64;Override\n            public boolean processNonOption(NutsArgument argument, NutsCommandLine cmdLine) {\n                String s = argument.getString();\n                if(isURL(s)){\n                    hl.includeFileURL(s);\n                }else{\n                    hl.includeFile(s);\n                }\n                noMoreOptions=true;\n                return true;\n            }\n\n            private boolean isURL(String s) {\n                return\n                        s.startsWith("file:")\n                        ||s.startsWith("http:")\n                        ||s.startsWith("https:")\n                        ;\n            }\n\n            &#64;Override\n            public void exec() {\n                hl.compile();\n            }\n        });\n\n')),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void processCommandLine(NutsCommandLineProcessor commandLineProcessor)\n")),Object(o.b)("p",null,"commandLineProcessor"),Object(o.b)("h2",{id:"-nutsapplicationlifecycle"},"\u2615 NutsApplicationLifeCycle"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  net.vpc.app.nuts.NutsApplicationLifeCycle\n")),Object(o.b)("p",null,"Application Life Cycle interface define methods to be overridden to\nperform specific business for each of the predefined application execution\nmodes ",Object(o.b)("inlineCode",{parentName:"p"}," NutsApplicationMode"),"."),Object(o.b)("h3",{id:"-instance-methods-2"},"\u2699 Instance Methods"),Object(o.b)("h4",{id:"-createapplicationcontextws-args-starttimemillis-1"},"\u2699 createApplicationContext(ws, args, startTimeMillis)"),Object(o.b)("p",null,"this method should be implemented to create specific ApplicationContext\nimplementation or return null to use default one."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsApplicationContext createApplicationContext(NutsWorkspace ws, String[] args, long startTimeMillis)\n")),Object(o.b)("p",null,"workspace\napplication arguments\nstart time in milliseconds"),Object(o.b)("h4",{id:"-oninstallapplicationapplicationcontext-1"},"\u2699 onInstallApplication(applicationContext)"),Object(o.b)("p",null,"this method should be implemented to perform specific business when\napplication is installed."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void onInstallApplication(NutsApplicationContext applicationContext)\n")),Object(o.b)("p",null,"context"),Object(o.b)("h4",{id:"-onrunapplicationapplicationcontext"},"\u2699 onRunApplication(applicationContext)"),Object(o.b)("p",null,"this method should be implemented to perform specific business when\napplication is running (default mode)"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void onRunApplication(NutsApplicationContext applicationContext)\n")),Object(o.b)("p",null,"context"),Object(o.b)("h4",{id:"-onuninstallapplicationapplicationcontext-1"},"\u2699 onUninstallApplication(applicationContext)"),Object(o.b)("p",null,"this method should be implemented to perform specific business when\napplication is un-installed."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void onUninstallApplication(NutsApplicationContext applicationContext)\n")),Object(o.b)("p",null,"context"),Object(o.b)("h4",{id:"-onupdateapplicationapplicationcontext-1"},"\u2699 onUpdateApplication(applicationContext)"),Object(o.b)("p",null,"this method should be implemented to perform specific business when\napplication is updated."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void onUpdateApplication(NutsApplicationContext applicationContext)\n")),Object(o.b)("p",null,"context"),Object(o.b)("h2",{id:"-nutsapplications"},"\u2615 NutsApplications"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"public  final  net.vpc.app.nuts.NutsApplications\n")),Object(o.b)("p",null,"Helper class for Nuts Applications"),Object(o.b)("h3",{id:"-constant-fields"},"\ud83d\udce2\u2744 Constant Fields"),Object(o.b)("h4",{id:"-sharedmap"},"\ud83d\udce2\u2744 sharedMap"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"private  static  final  ThreadLocal\\<Map\\<String,Object\\>\\> sharedMap = new ThreadLocal<>()\n")),Object(o.b)("h3",{id:"-static-properties"},"\ud83d\udce2\ud83c\udf9b Static Properties"),Object(o.b)("h4",{id:"-sharedmap-1"},"\ud83d\udcc4\ud83d\udce2\ud83c\udf9b sharedMap"),Object(o.b)("p",null,"a thread local map used to share information between workspace\nand embedded applications."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"[read-only] public  static  Map\\<String,Object\\> sharedMap\npublic  static  Map\\<String,Object\\> getSharedMap()\n")),Object(o.b)("h3",{id:"-static-methods-1"},"\ud83d\udce2\u2699 Static Methods"),Object(o.b)("h4",{id:"-processthrowableex-args-out"},"\ud83d\udce2\u2699 processThrowable(ex, args, out)"),Object(o.b)("p",null,"process throwables and return exit code"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"int processThrowable(Throwable ex, String[] args, PrintStream out)\n")),Object(o.b)("p",null,"exception\napplication arguments to check from if a '--verbose' or\n'--debug' option is armed\nout stream"),Object(o.b)("h4",{id:"-runapplicationargs-session-appclass-lifecycle"},"\ud83d\udce2\u2699 runApplication(args, session, appClass, lifeCycle)"),Object(o.b)("p",null,"run application with given life cycle."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"void runApplication(String[] args, NutsSession session, Class appClass, NutsApplicationLifeCycle lifeCycle)\n")),Object(o.b)("p",null,"application arguments\nsession\napplication class\napplication life cycle"),Object(o.b)("h3",{id:"\ud83e\ude84-constructors"},"\ud83e\ude84 Constructors"),Object(o.b)("h4",{id:"\ud83e\ude84-nutsapplications"},"\ud83e\ude84 NutsApplications()"),Object(o.b)("p",null,"private constructor"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"NutsApplications()\n")))}s.isMDXComponent=!0}}]);