[[    _   __      __
   / | / /_  __/ /______
  /  |/ / / / / __/ ___/
 / /|  / /_/ / /_(__  )
/_/ |_/\\__,_/\\__/____/  ]] version [[${nuts.boot-version}]]


[[nuts]] stands for <<Network Updatable Things Services>> tool. It is a simple tool  for ===managing=== remote,
packages, ===installing=== these  packages to the current machine and ===executing=== such  packages on need.
Each managed package  is also called a <<nuts>> which  is a <<Network Updatable Thing Service>> .
<<nuts>> packages are  stored  into repositories. A  'repository'  may be local for  storing local <<nuts>>
or remote for accessing  remote packages \(good examples  are  remote maven  repositories\). It may
also be a proxy '''repository''' so that remote packages are fetched and cached locally to save network
resources.
One manages a set of repositories called a  'workspace'. Managed <<nuts>>  (===packages===)  have descriptors
that depicts dependencies between them. This dependency is seamlessly handled by  [[nuts]]  (tool) to
resolve and download on-need dependencies over the wire.

[[nuts]] is a swiss army knife tool as it acts like (and supports) maven <<build tool>> to have an abstract
view of the the  packages dependency, like  zypper/apt-get  <<package manager tools>>  to  install and
uninstall packages allowing multiple versions of the very same package to  be installed, and like
git/svn <<source version tools>> to support package (re)-building and deploying.

===COMMON VERBS:===
<<deploy,undeploy>>   : to handle packages (package installers) on the local repositories
<<install,uninstall>> : to install/uninstall a package (using its fetched/deployed installer)
<<checkout,commit>>   : create new versions of the packages
<<fetch,push>>        : download, upload to remote repositories
<<find>>              : searches for existing/installable packages

===SYNOPSYS:===
nuts [[[Nuts Options]]] <<<command>>> <<<args>>> ...

===USAGE:===
nuts [[[Nuts Options]]] [[[Nuts Command]]]
===Boot Version:=== ${nuts.boot-version}
===Nuts Options:===
 [[--workspace]] <<<WORKSPACE_LOCATION>>>
      workspace location to open
 [[--archetype]] <<<ARCHETYPE_NAME>>>
      workspace archetype to create (if workspace not found)
 [[--login]]     <<<LOGIN>>>
      workspace login
 [[--password]]  <<<PASSWORD>>>
      workspace password
 [[--save]]
      saves workspace if newly created
 [[--version]]
      shows version
 [[--which]]
      shows which versions, libraries and locations are used for booting [[nuts]]
 [[--perf]]
      shows startup time in ms
 [[--help]]
      shows this help and exit
 [[--update]]
      checks if a newer version of [[nuts]] is available in the current workspace and perform update
 [[--check-updates]]
      checks if a newer version of [[nuts]] is available in the current workspace without performing updates
 [[--verbose | [[--log-info]] | [[--log-fine]] | [[--log-finer]] | [[--log-severe]] | [[--log-warning]]

===Nuts Command:===
 commands are workspace specific, type 'help' (without '--') command for help

===Examples:===
       nuts --help
            shows this help witch is the help to the nuts bootstrapper (not workspace aware)
       nuts help
            shows this help and lists available commands in the current workspace
       nuts --update --workspace /home/me/some-folder --archetype minimal --save
            updates [[nuts]] to the very latest version and restart using workspace location
            /home/me/some-folder location. A minimal ('minimal' archetype) workspace will be created
            and saved. The workspace handles local packages only (as 'minimal' archetype)