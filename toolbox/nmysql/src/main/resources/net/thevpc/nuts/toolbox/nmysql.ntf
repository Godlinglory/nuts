##) nmysql:
manage mysql instances

###) SYNOPSIS:
```sh nmysql <command> <global-options> <command-options>```
manage local mysql database access configurations to help backup/restore data simply

```sh nmysql list [--local | --remote] [<name>...]```
    list all databases

```sh nmysql list --name <db@config-name>```
    list all databases for the given config-name


```sh nmysql add --name <db@config-name> <command-options>```
    add database config

    config options are :
        ```sh --local                       ``` : add local instance (default)
        ```sh --remote                      ``` : add remote instance (default)

        ```sh --startup-wait-time   <VALUE> ``` : startup  wait time (applicable for local instances)
        ```sh --shutdown-wait-time  <VALUE> ``` : shutdown wait time (applicable for local instances)
        ```sh --archive-folder      <VALUE> ``` : archive folder (applicable for local instances)
        ```sh --running-folder      <VALUE> ``` : running folder (applicable for local instances)
        ```sh --log-file            <VALUE> ``` : log file path (applicable for local instances)
        ```sh --mysql-command       <VALUE> ``` : mysql command path (applicable for local instances)
        ```sh --mysqldump-command   <VALUE> ``` : mysqldump command path (applicable for local instances)
        ```sh --db                  <VALUE> ``` : db name  (applicable for local instances)
        ```sh --user                <VALUE> ``` : db user  (applicable for local instances)
        ```sh --password            <VALUE> ``` : db password  (applicable for local instances)
        ```sh --ask-password                ``` : if present password is read from standard input  (applicable for local instances)

        ```sh --local-name                  ``` : local config mapped to this remote config (applicable for remote instances)
        ```sh --remote-name                 ``` : remote config mapped to this remote config (applicable for remote instances)
        ```sh --server                      ``` : remote server ssh address (applicable for remote instances)

```sh nmysql set --name <db@config-name> <command-options>```
    update database config. has the same options than ```sh add``` command


```sh nmysql remove [--local | --remote] [--name] <db\@config-name>```
    remove database config

```sh nmysql backup [ [--name] <db\@config-name>] [ --path <path>]```
    backup db data file <path>

```sh nmysql [--local] restore [ [--name] <db\@config-name>] [ --path <path>]```
    restore db data file from <path>

```sh nmysql pull [--name <db\@config-name>]```
    restore local config database with remote database data (using remote instance)

```sh nmysql push [--name <db\@config-name>]```
    restore remote config database with local database data (using remote instance)


###) EXAMPLES:
```sh nmysql add --name enisoinfo --user myuser --password mypassword```
    create configuration. Password will be encrypted and stored.

```sh nmysql backup --name enisoinfo```
    backup configuration named enisoinfo

```sh nmysql list```
    list all local and remote databases
