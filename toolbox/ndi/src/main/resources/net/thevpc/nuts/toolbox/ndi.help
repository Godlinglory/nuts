ndi (or ##nuts## desktop integration) is a portable desktop integration companion.
##ndi## help creation of scripts and shortcut on the host operating system to facilitate usage of nuts command line tool.

#) SYNOPSIS
```sh
ndi in|install <options> <command> ...
```
    install scripts/shortcuts for the given command so that it can be called directly by it's name

```sh
ndi un|uninstall <options> <command> ...
```
    uninstall scripts/shortcuts for the given

```sh
ndi sw|switch <options> ...
```
    switch default nuts workspace and/or version.
    on linux platforms, for example, ```sh ndi``` will update ~/.bashrc to point to the given workspace and/or version.
    a workspace can support multiple nuts-api versions and hence, ```sh ndi switch``` can switch between those versions.

```sh
ndi ln|link <options> ...
```
    create a new script to link to an existing nuts workspace and/or version.
    the link created will run 'nuts' against the selected workspace and/or version.

##) OPTIONS:
```sh
ndi in|install <options> <command> ...
```
    install scripts/shortcuts for the given command so that it can be called directly by it\'s name
``` sh  --embedded | -b ```
    enable embedded mode
``` sh  --external | --spawn | -x ```
    enable spawn process mode
``` sh  --user-cmd ```
    enable user external command mode
``` sh  --root-cmd ```
    enable root external command mode
``` sh  --exec-options | -X <option> ```
    exec options

```sh
ndi {{un}}|{{uninstall}} <options> <command> ...
```
    uninstall scripts/shortcuts for the given
```sh --embedded | -b ```
    enable embedded mode
```sh --external | --spawn | -x ```
    enable spawn process mode
```sh --user-cmd ```
    enable user external command mode
```sh --root-cmd ```
    enable root external command mode
```sh --exec-options | -X <option> ```
    exec options

```sh
ndi sw|switch <options> [<workspace>] [<api>]
```
    switch default nuts workspace and/or version.
    on linux platforms, for example, ```sh ndi``` will update ~/.bashrc to point to the given workspace and/or version.
    a workspace can support multiple nuts-api versions and hence, ```sh ndi switch``` can switch between those versions.
```sh --workspace | -w ```
    target workspace location
```sh --api | -a ```
    nuts api version

```sh
ndi ln|link <options> [<name>] [<workspace>] [<api>]
```

    create a new script to link to an existing nuts workspace and/or version.
    the link created will run 'nuts' against the selected workspace and/or version.
    if
```sh  --name | -n ```
    script name pattern. can include '%v' to append version name
```sh  --workspace | -w ```
    target workspace location
```sh  --api | -a ```
    nuts api version

